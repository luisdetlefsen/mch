//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3643
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace WindowsFormsApplication2 {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("MCHDataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class MCHDataSet1 : global::System.Data.DataSet {
        
        private Cargo_AbonoDataTable tableCargo_Abono;
        
        private ComunidadDataTable tableComunidad;
        
        private ContadorDataTable tableContador;
        
        private ContratoDataTable tableContrato;
        
        private HidroelectricaDataTable tableHidroelectrica;
        
        private LecturaDataTable tableLectura;
        
        private ParametroDataTable tableParametro;
        
        private PasswordDataTable tablePassword;
        
        private PersonaDataTable tablePersona;
        
        private Tip_Cargo_AbonoDataTable tableTip_Cargo_Abono;
        
        private Tip_ParametroDataTable tableTip_Parametro;
        
        private TIPO_SERVICIODataTable tableTIPO_SERVICIO;
        
        private global::System.Data.DataRelation relationFK_Cargo_Abono_Lectura;
        
        private global::System.Data.DataRelation relationFK_Cargo_Abono_Tip_Cargo_Abono;
        
        private global::System.Data.DataRelation relationFK_Comunidad_Hidroelectrica;
        
        private global::System.Data.DataRelation relationFK_Contador_Comunidad;
        
        private global::System.Data.DataRelation relationFK_CONTADOR_TIPO_SERVICIO;
        
        private global::System.Data.DataRelation relationfk_contrato_contador;
        
        private global::System.Data.DataRelation relationFK_Contrato_Persona;
        
        private global::System.Data.DataRelation relationFK_Lectura_Contrato;
        
        private global::System.Data.DataRelation relationFK_Parametro_Tip_Parametro;
        
        private global::System.Data.DataRelation relationFK_ID_Comunidad;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public MCHDataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected MCHDataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["Cargo_Abono"] != null)) {
                    base.Tables.Add(new Cargo_AbonoDataTable(ds.Tables["Cargo_Abono"]));
                }
                if ((ds.Tables["Comunidad"] != null)) {
                    base.Tables.Add(new ComunidadDataTable(ds.Tables["Comunidad"]));
                }
                if ((ds.Tables["Contador"] != null)) {
                    base.Tables.Add(new ContadorDataTable(ds.Tables["Contador"]));
                }
                if ((ds.Tables["Contrato"] != null)) {
                    base.Tables.Add(new ContratoDataTable(ds.Tables["Contrato"]));
                }
                if ((ds.Tables["Hidroelectrica"] != null)) {
                    base.Tables.Add(new HidroelectricaDataTable(ds.Tables["Hidroelectrica"]));
                }
                if ((ds.Tables["Lectura"] != null)) {
                    base.Tables.Add(new LecturaDataTable(ds.Tables["Lectura"]));
                }
                if ((ds.Tables["Parametro"] != null)) {
                    base.Tables.Add(new ParametroDataTable(ds.Tables["Parametro"]));
                }
                if ((ds.Tables["Password"] != null)) {
                    base.Tables.Add(new PasswordDataTable(ds.Tables["Password"]));
                }
                if ((ds.Tables["Persona"] != null)) {
                    base.Tables.Add(new PersonaDataTable(ds.Tables["Persona"]));
                }
                if ((ds.Tables["Tip_Cargo_Abono"] != null)) {
                    base.Tables.Add(new Tip_Cargo_AbonoDataTable(ds.Tables["Tip_Cargo_Abono"]));
                }
                if ((ds.Tables["Tip_Parametro"] != null)) {
                    base.Tables.Add(new Tip_ParametroDataTable(ds.Tables["Tip_Parametro"]));
                }
                if ((ds.Tables["TIPO_SERVICIO"] != null)) {
                    base.Tables.Add(new TIPO_SERVICIODataTable(ds.Tables["TIPO_SERVICIO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Cargo_AbonoDataTable Cargo_Abono {
            get {
                return this.tableCargo_Abono;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ComunidadDataTable Comunidad {
            get {
                return this.tableComunidad;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContadorDataTable Contador {
            get {
                return this.tableContador;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ContratoDataTable Contrato {
            get {
                return this.tableContrato;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public HidroelectricaDataTable Hidroelectrica {
            get {
                return this.tableHidroelectrica;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public LecturaDataTable Lectura {
            get {
                return this.tableLectura;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ParametroDataTable Parametro {
            get {
                return this.tableParametro;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PasswordDataTable Password {
            get {
                return this.tablePassword;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public PersonaDataTable Persona {
            get {
                return this.tablePersona;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tip_Cargo_AbonoDataTable Tip_Cargo_Abono {
            get {
                return this.tableTip_Cargo_Abono;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public Tip_ParametroDataTable Tip_Parametro {
            get {
                return this.tableTip_Parametro;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public TIPO_SERVICIODataTable TIPO_SERVICIO {
            get {
                return this.tableTIPO_SERVICIO;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            MCHDataSet1 cln = ((MCHDataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Cargo_Abono"] != null)) {
                    base.Tables.Add(new Cargo_AbonoDataTable(ds.Tables["Cargo_Abono"]));
                }
                if ((ds.Tables["Comunidad"] != null)) {
                    base.Tables.Add(new ComunidadDataTable(ds.Tables["Comunidad"]));
                }
                if ((ds.Tables["Contador"] != null)) {
                    base.Tables.Add(new ContadorDataTable(ds.Tables["Contador"]));
                }
                if ((ds.Tables["Contrato"] != null)) {
                    base.Tables.Add(new ContratoDataTable(ds.Tables["Contrato"]));
                }
                if ((ds.Tables["Hidroelectrica"] != null)) {
                    base.Tables.Add(new HidroelectricaDataTable(ds.Tables["Hidroelectrica"]));
                }
                if ((ds.Tables["Lectura"] != null)) {
                    base.Tables.Add(new LecturaDataTable(ds.Tables["Lectura"]));
                }
                if ((ds.Tables["Parametro"] != null)) {
                    base.Tables.Add(new ParametroDataTable(ds.Tables["Parametro"]));
                }
                if ((ds.Tables["Password"] != null)) {
                    base.Tables.Add(new PasswordDataTable(ds.Tables["Password"]));
                }
                if ((ds.Tables["Persona"] != null)) {
                    base.Tables.Add(new PersonaDataTable(ds.Tables["Persona"]));
                }
                if ((ds.Tables["Tip_Cargo_Abono"] != null)) {
                    base.Tables.Add(new Tip_Cargo_AbonoDataTable(ds.Tables["Tip_Cargo_Abono"]));
                }
                if ((ds.Tables["Tip_Parametro"] != null)) {
                    base.Tables.Add(new Tip_ParametroDataTable(ds.Tables["Tip_Parametro"]));
                }
                if ((ds.Tables["TIPO_SERVICIO"] != null)) {
                    base.Tables.Add(new TIPO_SERVICIODataTable(ds.Tables["TIPO_SERVICIO"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCargo_Abono = ((Cargo_AbonoDataTable)(base.Tables["Cargo_Abono"]));
            if ((initTable == true)) {
                if ((this.tableCargo_Abono != null)) {
                    this.tableCargo_Abono.InitVars();
                }
            }
            this.tableComunidad = ((ComunidadDataTable)(base.Tables["Comunidad"]));
            if ((initTable == true)) {
                if ((this.tableComunidad != null)) {
                    this.tableComunidad.InitVars();
                }
            }
            this.tableContador = ((ContadorDataTable)(base.Tables["Contador"]));
            if ((initTable == true)) {
                if ((this.tableContador != null)) {
                    this.tableContador.InitVars();
                }
            }
            this.tableContrato = ((ContratoDataTable)(base.Tables["Contrato"]));
            if ((initTable == true)) {
                if ((this.tableContrato != null)) {
                    this.tableContrato.InitVars();
                }
            }
            this.tableHidroelectrica = ((HidroelectricaDataTable)(base.Tables["Hidroelectrica"]));
            if ((initTable == true)) {
                if ((this.tableHidroelectrica != null)) {
                    this.tableHidroelectrica.InitVars();
                }
            }
            this.tableLectura = ((LecturaDataTable)(base.Tables["Lectura"]));
            if ((initTable == true)) {
                if ((this.tableLectura != null)) {
                    this.tableLectura.InitVars();
                }
            }
            this.tableParametro = ((ParametroDataTable)(base.Tables["Parametro"]));
            if ((initTable == true)) {
                if ((this.tableParametro != null)) {
                    this.tableParametro.InitVars();
                }
            }
            this.tablePassword = ((PasswordDataTable)(base.Tables["Password"]));
            if ((initTable == true)) {
                if ((this.tablePassword != null)) {
                    this.tablePassword.InitVars();
                }
            }
            this.tablePersona = ((PersonaDataTable)(base.Tables["Persona"]));
            if ((initTable == true)) {
                if ((this.tablePersona != null)) {
                    this.tablePersona.InitVars();
                }
            }
            this.tableTip_Cargo_Abono = ((Tip_Cargo_AbonoDataTable)(base.Tables["Tip_Cargo_Abono"]));
            if ((initTable == true)) {
                if ((this.tableTip_Cargo_Abono != null)) {
                    this.tableTip_Cargo_Abono.InitVars();
                }
            }
            this.tableTip_Parametro = ((Tip_ParametroDataTable)(base.Tables["Tip_Parametro"]));
            if ((initTable == true)) {
                if ((this.tableTip_Parametro != null)) {
                    this.tableTip_Parametro.InitVars();
                }
            }
            this.tableTIPO_SERVICIO = ((TIPO_SERVICIODataTable)(base.Tables["TIPO_SERVICIO"]));
            if ((initTable == true)) {
                if ((this.tableTIPO_SERVICIO != null)) {
                    this.tableTIPO_SERVICIO.InitVars();
                }
            }
            this.relationFK_Cargo_Abono_Lectura = this.Relations["FK_Cargo_Abono_Lectura"];
            this.relationFK_Cargo_Abono_Tip_Cargo_Abono = this.Relations["FK_Cargo_Abono_Tip_Cargo_Abono"];
            this.relationFK_Comunidad_Hidroelectrica = this.Relations["FK_Comunidad_Hidroelectrica"];
            this.relationFK_Contador_Comunidad = this.Relations["FK_Contador_Comunidad"];
            this.relationFK_CONTADOR_TIPO_SERVICIO = this.Relations["FK_CONTADOR_TIPO_SERVICIO"];
            this.relationfk_contrato_contador = this.Relations["fk_contrato_contador"];
            this.relationFK_Contrato_Persona = this.Relations["FK_Contrato_Persona"];
            this.relationFK_Lectura_Contrato = this.Relations["FK_Lectura_Contrato"];
            this.relationFK_Parametro_Tip_Parametro = this.Relations["FK_Parametro_Tip_Parametro"];
            this.relationFK_ID_Comunidad = this.Relations["FK_ID_Comunidad"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "MCHDataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/MCHDataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCargo_Abono = new Cargo_AbonoDataTable();
            base.Tables.Add(this.tableCargo_Abono);
            this.tableComunidad = new ComunidadDataTable();
            base.Tables.Add(this.tableComunidad);
            this.tableContador = new ContadorDataTable();
            base.Tables.Add(this.tableContador);
            this.tableContrato = new ContratoDataTable();
            base.Tables.Add(this.tableContrato);
            this.tableHidroelectrica = new HidroelectricaDataTable();
            base.Tables.Add(this.tableHidroelectrica);
            this.tableLectura = new LecturaDataTable();
            base.Tables.Add(this.tableLectura);
            this.tableParametro = new ParametroDataTable();
            base.Tables.Add(this.tableParametro);
            this.tablePassword = new PasswordDataTable();
            base.Tables.Add(this.tablePassword);
            this.tablePersona = new PersonaDataTable();
            base.Tables.Add(this.tablePersona);
            this.tableTip_Cargo_Abono = new Tip_Cargo_AbonoDataTable();
            base.Tables.Add(this.tableTip_Cargo_Abono);
            this.tableTip_Parametro = new Tip_ParametroDataTable();
            base.Tables.Add(this.tableTip_Parametro);
            this.tableTIPO_SERVICIO = new TIPO_SERVICIODataTable();
            base.Tables.Add(this.tableTIPO_SERVICIO);
            this.relationFK_Cargo_Abono_Lectura = new global::System.Data.DataRelation("FK_Cargo_Abono_Lectura", new global::System.Data.DataColumn[] {
                        this.tableLectura.ID_LecturaColumn}, new global::System.Data.DataColumn[] {
                        this.tableCargo_Abono.ID_LecturaColumn}, false);
            this.Relations.Add(this.relationFK_Cargo_Abono_Lectura);
            this.relationFK_Cargo_Abono_Tip_Cargo_Abono = new global::System.Data.DataRelation("FK_Cargo_Abono_Tip_Cargo_Abono", new global::System.Data.DataColumn[] {
                        this.tableTip_Cargo_Abono.Tip_Cargo_AbonoColumn}, new global::System.Data.DataColumn[] {
                        this.tableCargo_Abono.Tip_Cargo_AbonoColumn}, false);
            this.Relations.Add(this.relationFK_Cargo_Abono_Tip_Cargo_Abono);
            this.relationFK_Comunidad_Hidroelectrica = new global::System.Data.DataRelation("FK_Comunidad_Hidroelectrica", new global::System.Data.DataColumn[] {
                        this.tableHidroelectrica.ID_HidroelectricaColumn}, new global::System.Data.DataColumn[] {
                        this.tableComunidad.ID_HidroelectricaColumn}, false);
            this.Relations.Add(this.relationFK_Comunidad_Hidroelectrica);
            this.relationFK_Contador_Comunidad = new global::System.Data.DataRelation("FK_Contador_Comunidad", new global::System.Data.DataColumn[] {
                        this.tableComunidad.ID_ComunidadColumn}, new global::System.Data.DataColumn[] {
                        this.tableContador.ID_ComunidadColumn}, false);
            this.Relations.Add(this.relationFK_Contador_Comunidad);
            this.relationFK_CONTADOR_TIPO_SERVICIO = new global::System.Data.DataRelation("FK_CONTADOR_TIPO_SERVICIO", new global::System.Data.DataColumn[] {
                        this.tableTIPO_SERVICIO.NO_TIPO_SERVICIOColumn}, new global::System.Data.DataColumn[] {
                        this.tableContador.TIPO_SERVICIOColumn}, false);
            this.Relations.Add(this.relationFK_CONTADOR_TIPO_SERVICIO);
            this.relationfk_contrato_contador = new global::System.Data.DataRelation("fk_contrato_contador", new global::System.Data.DataColumn[] {
                        this.tableContador.ID_ContadorColumn}, new global::System.Data.DataColumn[] {
                        this.tableContrato.ID_ContadorColumn}, false);
            this.Relations.Add(this.relationfk_contrato_contador);
            this.relationFK_Contrato_Persona = new global::System.Data.DataRelation("FK_Contrato_Persona", new global::System.Data.DataColumn[] {
                        this.tablePersona.ID_PersonaColumn}, new global::System.Data.DataColumn[] {
                        this.tableContrato.ID_PersonaColumn}, false);
            this.Relations.Add(this.relationFK_Contrato_Persona);
            this.relationFK_Lectura_Contrato = new global::System.Data.DataRelation("FK_Lectura_Contrato", new global::System.Data.DataColumn[] {
                        this.tableContrato.ID_ContratoColumn}, new global::System.Data.DataColumn[] {
                        this.tableLectura.ID_ContratoColumn}, false);
            this.Relations.Add(this.relationFK_Lectura_Contrato);
            this.relationFK_Parametro_Tip_Parametro = new global::System.Data.DataRelation("FK_Parametro_Tip_Parametro", new global::System.Data.DataColumn[] {
                        this.tableTip_Parametro.Tip_ParametroColumn}, new global::System.Data.DataColumn[] {
                        this.tableParametro.Tip_ParametroColumn}, false);
            this.Relations.Add(this.relationFK_Parametro_Tip_Parametro);
            this.relationFK_ID_Comunidad = new global::System.Data.DataRelation("FK_ID_Comunidad", new global::System.Data.DataColumn[] {
                        this.tableComunidad.ID_ComunidadColumn}, new global::System.Data.DataColumn[] {
                        this.tablePersona.ID_ComunidadColumn}, false);
            this.Relations.Add(this.relationFK_ID_Comunidad);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCargo_Abono() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeComunidad() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContador() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeContrato() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeHidroelectrica() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeLectura() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeParametro() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePassword() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializePersona() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTip_Cargo_Abono() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTip_Parametro() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeTIPO_SERVICIO() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            MCHDataSet1 ds = new MCHDataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void Cargo_AbonoRowChangeEventHandler(object sender, Cargo_AbonoRowChangeEvent e);
        
        public delegate void ComunidadRowChangeEventHandler(object sender, ComunidadRowChangeEvent e);
        
        public delegate void ContadorRowChangeEventHandler(object sender, ContadorRowChangeEvent e);
        
        public delegate void ContratoRowChangeEventHandler(object sender, ContratoRowChangeEvent e);
        
        public delegate void HidroelectricaRowChangeEventHandler(object sender, HidroelectricaRowChangeEvent e);
        
        public delegate void LecturaRowChangeEventHandler(object sender, LecturaRowChangeEvent e);
        
        public delegate void ParametroRowChangeEventHandler(object sender, ParametroRowChangeEvent e);
        
        public delegate void PasswordRowChangeEventHandler(object sender, PasswordRowChangeEvent e);
        
        public delegate void PersonaRowChangeEventHandler(object sender, PersonaRowChangeEvent e);
        
        public delegate void Tip_Cargo_AbonoRowChangeEventHandler(object sender, Tip_Cargo_AbonoRowChangeEvent e);
        
        public delegate void Tip_ParametroRowChangeEventHandler(object sender, Tip_ParametroRowChangeEvent e);
        
        public delegate void TIPO_SERVICIORowChangeEventHandler(object sender, TIPO_SERVICIORowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Cargo_AbonoDataTable : global::System.Data.TypedTableBase<Cargo_AbonoRow> {
            
            private global::System.Data.DataColumn columnID_Cargo_Abono;
            
            private global::System.Data.DataColumn columnID_Lectura;
            
            private global::System.Data.DataColumn columnTip_Cargo_Abono;
            
            private global::System.Data.DataColumn columnMonto;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnFec_Transac;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoDataTable() {
                this.TableName = "Cargo_Abono";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Cargo_AbonoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Cargo_AbonoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_Cargo_AbonoColumn {
                get {
                    return this.columnID_Cargo_Abono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_LecturaColumn {
                get {
                    return this.columnID_Lectura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tip_Cargo_AbonoColumn {
                get {
                    return this.columnTip_Cargo_Abono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn MontoColumn {
                get {
                    return this.columnMonto;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fec_TransacColumn {
                get {
                    return this.columnFec_Transac;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow this[int index] {
                get {
                    return ((Cargo_AbonoRow)(this.Rows[index]));
                }
            }
            
            public event Cargo_AbonoRowChangeEventHandler Cargo_AbonoRowChanging;
            
            public event Cargo_AbonoRowChangeEventHandler Cargo_AbonoRowChanged;
            
            public event Cargo_AbonoRowChangeEventHandler Cargo_AbonoRowDeleting;
            
            public event Cargo_AbonoRowChangeEventHandler Cargo_AbonoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCargo_AbonoRow(Cargo_AbonoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow AddCargo_AbonoRow(LecturaRow parentLecturaRowByFK_Cargo_Abono_Lectura, Tip_Cargo_AbonoRow parentTip_Cargo_AbonoRowByFK_Cargo_Abono_Tip_Cargo_Abono, decimal Monto, string Descripcion, System.DateTime Fec_Transac) {
                Cargo_AbonoRow rowCargo_AbonoRow = ((Cargo_AbonoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        null,
                        Monto,
                        Descripcion,
                        Fec_Transac};
                if ((parentLecturaRowByFK_Cargo_Abono_Lectura != null)) {
                    columnValuesArray[1] = parentLecturaRowByFK_Cargo_Abono_Lectura[0];
                }
                if ((parentTip_Cargo_AbonoRowByFK_Cargo_Abono_Tip_Cargo_Abono != null)) {
                    columnValuesArray[2] = parentTip_Cargo_AbonoRowByFK_Cargo_Abono_Tip_Cargo_Abono[0];
                }
                rowCargo_AbonoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowCargo_AbonoRow);
                return rowCargo_AbonoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow FindByID_Cargo_Abono(int ID_Cargo_Abono) {
                return ((Cargo_AbonoRow)(this.Rows.Find(new object[] {
                            ID_Cargo_Abono})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Cargo_AbonoDataTable cln = ((Cargo_AbonoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Cargo_AbonoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Cargo_Abono = base.Columns["ID_Cargo_Abono"];
                this.columnID_Lectura = base.Columns["ID_Lectura"];
                this.columnTip_Cargo_Abono = base.Columns["Tip_Cargo_Abono"];
                this.columnMonto = base.Columns["Monto"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnFec_Transac = base.Columns["Fec_Transac"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Cargo_Abono = new global::System.Data.DataColumn("ID_Cargo_Abono", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Cargo_Abono);
                this.columnID_Lectura = new global::System.Data.DataColumn("ID_Lectura", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Lectura);
                this.columnTip_Cargo_Abono = new global::System.Data.DataColumn("Tip_Cargo_Abono", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip_Cargo_Abono);
                this.columnMonto = new global::System.Data.DataColumn("Monto", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMonto);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnFec_Transac = new global::System.Data.DataColumn("Fec_Transac", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Transac);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Cargo_Abono}, true));
                this.columnID_Cargo_Abono.AutoIncrement = true;
                this.columnID_Cargo_Abono.AutoIncrementSeed = -1;
                this.columnID_Cargo_Abono.AutoIncrementStep = -1;
                this.columnID_Cargo_Abono.AllowDBNull = false;
                this.columnID_Cargo_Abono.ReadOnly = true;
                this.columnID_Cargo_Abono.Unique = true;
                this.columnTip_Cargo_Abono.AllowDBNull = false;
                this.columnMonto.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
                this.columnFec_Transac.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow NewCargo_AbonoRow() {
                return ((Cargo_AbonoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Cargo_AbonoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Cargo_AbonoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Cargo_AbonoRowChanged != null)) {
                    this.Cargo_AbonoRowChanged(this, new Cargo_AbonoRowChangeEvent(((Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Cargo_AbonoRowChanging != null)) {
                    this.Cargo_AbonoRowChanging(this, new Cargo_AbonoRowChangeEvent(((Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Cargo_AbonoRowDeleted != null)) {
                    this.Cargo_AbonoRowDeleted(this, new Cargo_AbonoRowChangeEvent(((Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Cargo_AbonoRowDeleting != null)) {
                    this.Cargo_AbonoRowDeleting(this, new Cargo_AbonoRowChangeEvent(((Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCargo_AbonoRow(Cargo_AbonoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Cargo_AbonoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ComunidadDataTable : global::System.Data.TypedTableBase<ComunidadRow> {
            
            private global::System.Data.DataColumn columnID_Comunidad;
            
            private global::System.Data.DataColumn columnID_Hidroelectrica;
            
            private global::System.Data.DataColumn columnNombre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadDataTable() {
                this.TableName = "Comunidad";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ComunidadDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ComunidadDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ComunidadColumn {
                get {
                    return this.columnID_Comunidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_HidroelectricaColumn {
                get {
                    return this.columnID_Hidroelectrica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow this[int index] {
                get {
                    return ((ComunidadRow)(this.Rows[index]));
                }
            }
            
            public event ComunidadRowChangeEventHandler ComunidadRowChanging;
            
            public event ComunidadRowChangeEventHandler ComunidadRowChanged;
            
            public event ComunidadRowChangeEventHandler ComunidadRowDeleting;
            
            public event ComunidadRowChangeEventHandler ComunidadRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddComunidadRow(ComunidadRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow AddComunidadRow(HidroelectricaRow parentHidroelectricaRowByFK_Comunidad_Hidroelectrica, string Nombre) {
                ComunidadRow rowComunidadRow = ((ComunidadRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Nombre};
                if ((parentHidroelectricaRowByFK_Comunidad_Hidroelectrica != null)) {
                    columnValuesArray[1] = parentHidroelectricaRowByFK_Comunidad_Hidroelectrica[0];
                }
                rowComunidadRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowComunidadRow);
                return rowComunidadRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow FindByID_Comunidad(int ID_Comunidad) {
                return ((ComunidadRow)(this.Rows.Find(new object[] {
                            ID_Comunidad})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ComunidadDataTable cln = ((ComunidadDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ComunidadDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Comunidad = base.Columns["ID_Comunidad"];
                this.columnID_Hidroelectrica = base.Columns["ID_Hidroelectrica"];
                this.columnNombre = base.Columns["Nombre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Comunidad = new global::System.Data.DataColumn("ID_Comunidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Comunidad);
                this.columnID_Hidroelectrica = new global::System.Data.DataColumn("ID_Hidroelectrica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Hidroelectrica);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Comunidad}, true));
                this.columnID_Comunidad.AutoIncrement = true;
                this.columnID_Comunidad.AutoIncrementSeed = -1;
                this.columnID_Comunidad.AutoIncrementStep = -1;
                this.columnID_Comunidad.AllowDBNull = false;
                this.columnID_Comunidad.ReadOnly = true;
                this.columnID_Comunidad.Unique = true;
                this.columnID_Hidroelectrica.AllowDBNull = false;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow NewComunidadRow() {
                return ((ComunidadRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ComunidadRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ComunidadRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ComunidadRowChanged != null)) {
                    this.ComunidadRowChanged(this, new ComunidadRowChangeEvent(((ComunidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ComunidadRowChanging != null)) {
                    this.ComunidadRowChanging(this, new ComunidadRowChangeEvent(((ComunidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ComunidadRowDeleted != null)) {
                    this.ComunidadRowDeleted(this, new ComunidadRowChangeEvent(((ComunidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ComunidadRowDeleting != null)) {
                    this.ComunidadRowDeleting(this, new ComunidadRowChangeEvent(((ComunidadRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveComunidadRow(ComunidadRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ComunidadDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContadorDataTable : global::System.Data.TypedTableBase<ContadorRow> {
            
            private global::System.Data.DataColumn columnID_Contador;
            
            private global::System.Data.DataColumn columnID_Comunidad;
            
            private global::System.Data.DataColumn columnDireccion;
            
            private global::System.Data.DataColumn columnNo_Poste;
            
            private global::System.Data.DataColumn columnTIPO_SERVICIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorDataTable() {
                this.TableName = "Contador";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContadorDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContadorDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ContadorColumn {
                get {
                    return this.columnID_Contador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ComunidadColumn {
                get {
                    return this.columnID_Comunidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DireccionColumn {
                get {
                    return this.columnDireccion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_PosteColumn {
                get {
                    return this.columnNo_Poste;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIPO_SERVICIOColumn {
                get {
                    return this.columnTIPO_SERVICIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow this[int index] {
                get {
                    return ((ContadorRow)(this.Rows[index]));
                }
            }
            
            public event ContadorRowChangeEventHandler ContadorRowChanging;
            
            public event ContadorRowChangeEventHandler ContadorRowChanged;
            
            public event ContadorRowChangeEventHandler ContadorRowDeleting;
            
            public event ContadorRowChangeEventHandler ContadorRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContadorRow(ContadorRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow AddContadorRow(string ID_Contador, ComunidadRow parentComunidadRowByFK_Contador_Comunidad, string Direccion, string No_Poste, TIPO_SERVICIORow parentTIPO_SERVICIORowByFK_CONTADOR_TIPO_SERVICIO) {
                ContadorRow rowContadorRow = ((ContadorRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_Contador,
                        null,
                        Direccion,
                        No_Poste,
                        null};
                if ((parentComunidadRowByFK_Contador_Comunidad != null)) {
                    columnValuesArray[1] = parentComunidadRowByFK_Contador_Comunidad[0];
                }
                if ((parentTIPO_SERVICIORowByFK_CONTADOR_TIPO_SERVICIO != null)) {
                    columnValuesArray[4] = parentTIPO_SERVICIORowByFK_CONTADOR_TIPO_SERVICIO[0];
                }
                rowContadorRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContadorRow);
                return rowContadorRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow FindByID_Contador(string ID_Contador) {
                return ((ContadorRow)(this.Rows.Find(new object[] {
                            ID_Contador})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContadorDataTable cln = ((ContadorDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContadorDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Contador = base.Columns["ID_Contador"];
                this.columnID_Comunidad = base.Columns["ID_Comunidad"];
                this.columnDireccion = base.Columns["Direccion"];
                this.columnNo_Poste = base.Columns["No_Poste"];
                this.columnTIPO_SERVICIO = base.Columns["TIPO_SERVICIO"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Contador = new global::System.Data.DataColumn("ID_Contador", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Contador);
                this.columnID_Comunidad = new global::System.Data.DataColumn("ID_Comunidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Comunidad);
                this.columnDireccion = new global::System.Data.DataColumn("Direccion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDireccion);
                this.columnNo_Poste = new global::System.Data.DataColumn("No_Poste", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Poste);
                this.columnTIPO_SERVICIO = new global::System.Data.DataColumn("TIPO_SERVICIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_SERVICIO);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Contador}, true));
                this.columnID_Contador.AllowDBNull = false;
                this.columnID_Contador.Unique = true;
                this.columnID_Contador.MaxLength = 100;
                this.columnID_Comunidad.AllowDBNull = false;
                this.columnDireccion.MaxLength = 255;
                this.columnNo_Poste.MaxLength = 45;
                this.columnTIPO_SERVICIO.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow NewContadorRow() {
                return ((ContadorRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContadorRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContadorRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContadorRowChanged != null)) {
                    this.ContadorRowChanged(this, new ContadorRowChangeEvent(((ContadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContadorRowChanging != null)) {
                    this.ContadorRowChanging(this, new ContadorRowChangeEvent(((ContadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContadorRowDeleted != null)) {
                    this.ContadorRowDeleted(this, new ContadorRowChangeEvent(((ContadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContadorRowDeleting != null)) {
                    this.ContadorRowDeleting(this, new ContadorRowChangeEvent(((ContadorRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContadorRow(ContadorRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContadorDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ContratoDataTable : global::System.Data.TypedTableBase<ContratoRow> {
            
            private global::System.Data.DataColumn columnID_Contrato;
            
            private global::System.Data.DataColumn columnID_Persona;
            
            private global::System.Data.DataColumn columnID_Contador;
            
            private global::System.Data.DataColumn columnFec_Inicio;
            
            private global::System.Data.DataColumn columnFec_Fin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoDataTable() {
                this.TableName = "Contrato";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContratoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ContratoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ContratoColumn {
                get {
                    return this.columnID_Contrato;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_PersonaColumn {
                get {
                    return this.columnID_Persona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ContadorColumn {
                get {
                    return this.columnID_Contador;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fec_InicioColumn {
                get {
                    return this.columnFec_Inicio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fec_FinColumn {
                get {
                    return this.columnFec_Fin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow this[int index] {
                get {
                    return ((ContratoRow)(this.Rows[index]));
                }
            }
            
            public event ContratoRowChangeEventHandler ContratoRowChanging;
            
            public event ContratoRowChangeEventHandler ContratoRowChanged;
            
            public event ContratoRowChangeEventHandler ContratoRowDeleting;
            
            public event ContratoRowChangeEventHandler ContratoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddContratoRow(ContratoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow AddContratoRow(string ID_Contrato, PersonaRow parentPersonaRowByFK_Contrato_Persona, ContadorRow parentContadorRowByfk_contrato_contador, System.DateTime Fec_Inicio, System.DateTime Fec_Fin) {
                ContratoRow rowContratoRow = ((ContratoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_Contrato,
                        null,
                        null,
                        Fec_Inicio,
                        Fec_Fin};
                if ((parentPersonaRowByFK_Contrato_Persona != null)) {
                    columnValuesArray[1] = parentPersonaRowByFK_Contrato_Persona[0];
                }
                if ((parentContadorRowByfk_contrato_contador != null)) {
                    columnValuesArray[2] = parentContadorRowByfk_contrato_contador[0];
                }
                rowContratoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowContratoRow);
                return rowContratoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow FindByID_Contrato(string ID_Contrato) {
                return ((ContratoRow)(this.Rows.Find(new object[] {
                            ID_Contrato})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ContratoDataTable cln = ((ContratoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ContratoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Contrato = base.Columns["ID_Contrato"];
                this.columnID_Persona = base.Columns["ID_Persona"];
                this.columnID_Contador = base.Columns["ID_Contador"];
                this.columnFec_Inicio = base.Columns["Fec_Inicio"];
                this.columnFec_Fin = base.Columns["Fec_Fin"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Contrato = new global::System.Data.DataColumn("ID_Contrato", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Contrato);
                this.columnID_Persona = new global::System.Data.DataColumn("ID_Persona", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Persona);
                this.columnID_Contador = new global::System.Data.DataColumn("ID_Contador", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Contador);
                this.columnFec_Inicio = new global::System.Data.DataColumn("Fec_Inicio", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Inicio);
                this.columnFec_Fin = new global::System.Data.DataColumn("Fec_Fin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Fin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Contrato}, true));
                this.columnID_Contrato.AllowDBNull = false;
                this.columnID_Contrato.Unique = true;
                this.columnID_Contrato.MaxLength = 20;
                this.columnID_Persona.AllowDBNull = false;
                this.columnID_Contador.AllowDBNull = false;
                this.columnID_Contador.MaxLength = 100;
                this.columnFec_Inicio.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow NewContratoRow() {
                return ((ContratoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ContratoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ContratoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ContratoRowChanged != null)) {
                    this.ContratoRowChanged(this, new ContratoRowChangeEvent(((ContratoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ContratoRowChanging != null)) {
                    this.ContratoRowChanging(this, new ContratoRowChangeEvent(((ContratoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ContratoRowDeleted != null)) {
                    this.ContratoRowDeleted(this, new ContratoRowChangeEvent(((ContratoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ContratoRowDeleting != null)) {
                    this.ContratoRowDeleting(this, new ContratoRowChangeEvent(((ContratoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveContratoRow(ContratoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ContratoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class HidroelectricaDataTable : global::System.Data.TypedTableBase<HidroelectricaRow> {
            
            private global::System.Data.DataColumn columnID_Hidroelectrica;
            
            private global::System.Data.DataColumn columnNombre;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaDataTable() {
                this.TableName = "Hidroelectrica";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HidroelectricaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected HidroelectricaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_HidroelectricaColumn {
                get {
                    return this.columnID_Hidroelectrica;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRow this[int index] {
                get {
                    return ((HidroelectricaRow)(this.Rows[index]));
                }
            }
            
            public event HidroelectricaRowChangeEventHandler HidroelectricaRowChanging;
            
            public event HidroelectricaRowChangeEventHandler HidroelectricaRowChanged;
            
            public event HidroelectricaRowChangeEventHandler HidroelectricaRowDeleting;
            
            public event HidroelectricaRowChangeEventHandler HidroelectricaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddHidroelectricaRow(HidroelectricaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRow AddHidroelectricaRow(string Nombre) {
                HidroelectricaRow rowHidroelectricaRow = ((HidroelectricaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre};
                rowHidroelectricaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowHidroelectricaRow);
                return rowHidroelectricaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRow FindByID_Hidroelectrica(int ID_Hidroelectrica) {
                return ((HidroelectricaRow)(this.Rows.Find(new object[] {
                            ID_Hidroelectrica})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                HidroelectricaDataTable cln = ((HidroelectricaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new HidroelectricaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Hidroelectrica = base.Columns["ID_Hidroelectrica"];
                this.columnNombre = base.Columns["Nombre"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Hidroelectrica = new global::System.Data.DataColumn("ID_Hidroelectrica", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Hidroelectrica);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Hidroelectrica}, true));
                this.columnID_Hidroelectrica.AutoIncrement = true;
                this.columnID_Hidroelectrica.AutoIncrementSeed = -1;
                this.columnID_Hidroelectrica.AutoIncrementStep = -1;
                this.columnID_Hidroelectrica.AllowDBNull = false;
                this.columnID_Hidroelectrica.ReadOnly = true;
                this.columnID_Hidroelectrica.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRow NewHidroelectricaRow() {
                return ((HidroelectricaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new HidroelectricaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(HidroelectricaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.HidroelectricaRowChanged != null)) {
                    this.HidroelectricaRowChanged(this, new HidroelectricaRowChangeEvent(((HidroelectricaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.HidroelectricaRowChanging != null)) {
                    this.HidroelectricaRowChanging(this, new HidroelectricaRowChangeEvent(((HidroelectricaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.HidroelectricaRowDeleted != null)) {
                    this.HidroelectricaRowDeleted(this, new HidroelectricaRowChangeEvent(((HidroelectricaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.HidroelectricaRowDeleting != null)) {
                    this.HidroelectricaRowDeleting(this, new HidroelectricaRowChangeEvent(((HidroelectricaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveHidroelectricaRow(HidroelectricaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "HidroelectricaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class LecturaDataTable : global::System.Data.TypedTableBase<LecturaRow> {
            
            private global::System.Data.DataColumn columnID_Lectura;
            
            private global::System.Data.DataColumn columnID_Contrato;
            
            private global::System.Data.DataColumn columnFecha_Lectura;
            
            private global::System.Data.DataColumn columnLectura;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaDataTable() {
                this.TableName = "Lectura";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LecturaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected LecturaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_LecturaColumn {
                get {
                    return this.columnID_Lectura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ContratoColumn {
                get {
                    return this.columnID_Contrato;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_LecturaColumn {
                get {
                    return this.columnFecha_Lectura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LecturaColumn {
                get {
                    return this.columnLectura;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow this[int index] {
                get {
                    return ((LecturaRow)(this.Rows[index]));
                }
            }
            
            public event LecturaRowChangeEventHandler LecturaRowChanging;
            
            public event LecturaRowChangeEventHandler LecturaRowChanged;
            
            public event LecturaRowChangeEventHandler LecturaRowDeleting;
            
            public event LecturaRowChangeEventHandler LecturaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddLecturaRow(LecturaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow AddLecturaRow(ContratoRow parentContratoRowByFK_Lectura_Contrato, System.DateTime Fecha_Lectura, int Lectura) {
                LecturaRow rowLecturaRow = ((LecturaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Fecha_Lectura,
                        Lectura};
                if ((parentContratoRowByFK_Lectura_Contrato != null)) {
                    columnValuesArray[1] = parentContratoRowByFK_Lectura_Contrato[0];
                }
                rowLecturaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowLecturaRow);
                return rowLecturaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow FindByID_Lectura(int ID_Lectura) {
                return ((LecturaRow)(this.Rows.Find(new object[] {
                            ID_Lectura})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                LecturaDataTable cln = ((LecturaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new LecturaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Lectura = base.Columns["ID_Lectura"];
                this.columnID_Contrato = base.Columns["ID_Contrato"];
                this.columnFecha_Lectura = base.Columns["Fecha_Lectura"];
                this.columnLectura = base.Columns["Lectura"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Lectura = new global::System.Data.DataColumn("ID_Lectura", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Lectura);
                this.columnID_Contrato = new global::System.Data.DataColumn("ID_Contrato", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Contrato);
                this.columnFecha_Lectura = new global::System.Data.DataColumn("Fecha_Lectura", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Lectura);
                this.columnLectura = new global::System.Data.DataColumn("Lectura", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLectura);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Lectura}, true));
                this.columnID_Lectura.AutoIncrement = true;
                this.columnID_Lectura.AutoIncrementSeed = -1;
                this.columnID_Lectura.AutoIncrementStep = -1;
                this.columnID_Lectura.AllowDBNull = false;
                this.columnID_Lectura.ReadOnly = true;
                this.columnID_Lectura.Unique = true;
                this.columnID_Contrato.AllowDBNull = false;
                this.columnID_Contrato.MaxLength = 20;
                this.columnFecha_Lectura.AllowDBNull = false;
                this.columnLectura.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow NewLecturaRow() {
                return ((LecturaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new LecturaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(LecturaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.LecturaRowChanged != null)) {
                    this.LecturaRowChanged(this, new LecturaRowChangeEvent(((LecturaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.LecturaRowChanging != null)) {
                    this.LecturaRowChanging(this, new LecturaRowChangeEvent(((LecturaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.LecturaRowDeleted != null)) {
                    this.LecturaRowDeleted(this, new LecturaRowChangeEvent(((LecturaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.LecturaRowDeleting != null)) {
                    this.LecturaRowDeleting(this, new LecturaRowChangeEvent(((LecturaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveLecturaRow(LecturaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "LecturaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ParametroDataTable : global::System.Data.TypedTableBase<ParametroRow> {
            
            private global::System.Data.DataColumn columnID_Parametro;
            
            private global::System.Data.DataColumn columnTip_Parametro;
            
            private global::System.Data.DataColumn columnParametro;
            
            private global::System.Data.DataColumn columnFec_Inicio;
            
            private global::System.Data.DataColumn columnFec_fin;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroDataTable() {
                this.TableName = "Parametro";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParametroDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ParametroDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ParametroColumn {
                get {
                    return this.columnID_Parametro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tip_ParametroColumn {
                get {
                    return this.columnTip_Parametro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ParametroColumn {
                get {
                    return this.columnParametro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fec_InicioColumn {
                get {
                    return this.columnFec_Inicio;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fec_finColumn {
                get {
                    return this.columnFec_fin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRow this[int index] {
                get {
                    return ((ParametroRow)(this.Rows[index]));
                }
            }
            
            public event ParametroRowChangeEventHandler ParametroRowChanging;
            
            public event ParametroRowChangeEventHandler ParametroRowChanged;
            
            public event ParametroRowChangeEventHandler ParametroRowDeleting;
            
            public event ParametroRowChangeEventHandler ParametroRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddParametroRow(ParametroRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRow AddParametroRow(Tip_ParametroRow parentTip_ParametroRowByFK_Parametro_Tip_Parametro, string Parametro, System.DateTime Fec_Inicio, System.DateTime Fec_fin) {
                ParametroRow rowParametroRow = ((ParametroRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        Parametro,
                        Fec_Inicio,
                        Fec_fin};
                if ((parentTip_ParametroRowByFK_Parametro_Tip_Parametro != null)) {
                    columnValuesArray[1] = parentTip_ParametroRowByFK_Parametro_Tip_Parametro[0];
                }
                rowParametroRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowParametroRow);
                return rowParametroRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRow FindByID_Parametro(int ID_Parametro) {
                return ((ParametroRow)(this.Rows.Find(new object[] {
                            ID_Parametro})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                ParametroDataTable cln = ((ParametroDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ParametroDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Parametro = base.Columns["ID_Parametro"];
                this.columnTip_Parametro = base.Columns["Tip_Parametro"];
                this.columnParametro = base.Columns["Parametro"];
                this.columnFec_Inicio = base.Columns["Fec_Inicio"];
                this.columnFec_fin = base.Columns["Fec_fin"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Parametro = new global::System.Data.DataColumn("ID_Parametro", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Parametro);
                this.columnTip_Parametro = new global::System.Data.DataColumn("Tip_Parametro", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip_Parametro);
                this.columnParametro = new global::System.Data.DataColumn("Parametro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParametro);
                this.columnFec_Inicio = new global::System.Data.DataColumn("Fec_Inicio", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_Inicio);
                this.columnFec_fin = new global::System.Data.DataColumn("Fec_fin", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFec_fin);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Parametro}, true));
                this.columnID_Parametro.AutoIncrement = true;
                this.columnID_Parametro.AutoIncrementSeed = -1;
                this.columnID_Parametro.AutoIncrementStep = -1;
                this.columnID_Parametro.AllowDBNull = false;
                this.columnID_Parametro.ReadOnly = true;
                this.columnID_Parametro.Unique = true;
                this.columnTip_Parametro.AllowDBNull = false;
                this.columnParametro.AllowDBNull = false;
                this.columnParametro.MaxLength = 255;
                this.columnFec_Inicio.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRow NewParametroRow() {
                return ((ParametroRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ParametroRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(ParametroRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ParametroRowChanged != null)) {
                    this.ParametroRowChanged(this, new ParametroRowChangeEvent(((ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ParametroRowChanging != null)) {
                    this.ParametroRowChanging(this, new ParametroRowChangeEvent(((ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ParametroRowDeleted != null)) {
                    this.ParametroRowDeleted(this, new ParametroRowChangeEvent(((ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ParametroRowDeleting != null)) {
                    this.ParametroRowDeleting(this, new ParametroRowChangeEvent(((ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveParametroRow(ParametroRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ParametroDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PasswordDataTable : global::System.Data.TypedTableBase<PasswordRow> {
            
            private global::System.Data.DataColumn columnID_Password;
            
            private global::System.Data.DataColumn columnPassword;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PasswordDataTable() {
                this.TableName = "Password";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PasswordDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PasswordDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_PasswordColumn {
                get {
                    return this.columnID_Password;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PasswordColumn {
                get {
                    return this.columnPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PasswordRow this[int index] {
                get {
                    return ((PasswordRow)(this.Rows[index]));
                }
            }
            
            public event PasswordRowChangeEventHandler PasswordRowChanging;
            
            public event PasswordRowChangeEventHandler PasswordRowChanged;
            
            public event PasswordRowChangeEventHandler PasswordRowDeleting;
            
            public event PasswordRowChangeEventHandler PasswordRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPasswordRow(PasswordRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PasswordRow AddPasswordRow(int ID_Password, string Password) {
                PasswordRow rowPasswordRow = ((PasswordRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_Password,
                        Password};
                rowPasswordRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPasswordRow);
                return rowPasswordRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PasswordDataTable cln = ((PasswordDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PasswordDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Password = base.Columns["ID_Password"];
                this.columnPassword = base.Columns["Password"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Password = new global::System.Data.DataColumn("ID_Password", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Password);
                this.columnPassword = new global::System.Data.DataColumn("Password", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassword);
                this.columnID_Password.AllowDBNull = false;
                this.columnPassword.AllowDBNull = false;
                this.columnPassword.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PasswordRow NewPasswordRow() {
                return ((PasswordRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PasswordRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PasswordRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PasswordRowChanged != null)) {
                    this.PasswordRowChanged(this, new PasswordRowChangeEvent(((PasswordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PasswordRowChanging != null)) {
                    this.PasswordRowChanging(this, new PasswordRowChangeEvent(((PasswordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PasswordRowDeleted != null)) {
                    this.PasswordRowDeleted(this, new PasswordRowChangeEvent(((PasswordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PasswordRowDeleting != null)) {
                    this.PasswordRowDeleting(this, new PasswordRowChangeEvent(((PasswordRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePasswordRow(PasswordRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PasswordDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class PersonaDataTable : global::System.Data.TypedTableBase<PersonaRow> {
            
            private global::System.Data.DataColumn columnID_Persona;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnCUI;
            
            private global::System.Data.DataColumn columnNo_Registro;
            
            private global::System.Data.DataColumn columnNo_Cedula;
            
            private global::System.Data.DataColumn columnSexo;
            
            private global::System.Data.DataColumn columnFecha_Nacimiento;
            
            private global::System.Data.DataColumn columnID_Comunidad;
            
            private global::System.Data.DataColumn columnCodigo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaDataTable() {
                this.TableName = "Persona";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PersonaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected PersonaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_PersonaColumn {
                get {
                    return this.columnID_Persona;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CUIColumn {
                get {
                    return this.columnCUI;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_RegistroColumn {
                get {
                    return this.columnNo_Registro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn No_CedulaColumn {
                get {
                    return this.columnNo_Cedula;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SexoColumn {
                get {
                    return this.columnSexo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Fecha_NacimientoColumn {
                get {
                    return this.columnFecha_Nacimiento;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ID_ComunidadColumn {
                get {
                    return this.columnID_Comunidad;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn CodigoColumn {
                get {
                    return this.columnCodigo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow this[int index] {
                get {
                    return ((PersonaRow)(this.Rows[index]));
                }
            }
            
            public event PersonaRowChangeEventHandler PersonaRowChanging;
            
            public event PersonaRowChangeEventHandler PersonaRowChanged;
            
            public event PersonaRowChangeEventHandler PersonaRowDeleting;
            
            public event PersonaRowChangeEventHandler PersonaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddPersonaRow(PersonaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow AddPersonaRow(string Nombre, string CUI, string No_Registro, int No_Cedula, string Sexo, System.DateTime Fecha_Nacimiento, ComunidadRow parentComunidadRowByFK_ID_Comunidad, string Codigo) {
                PersonaRow rowPersonaRow = ((PersonaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre,
                        CUI,
                        No_Registro,
                        No_Cedula,
                        Sexo,
                        Fecha_Nacimiento,
                        null,
                        Codigo};
                if ((parentComunidadRowByFK_ID_Comunidad != null)) {
                    columnValuesArray[7] = parentComunidadRowByFK_ID_Comunidad[0];
                }
                rowPersonaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowPersonaRow);
                return rowPersonaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow FindByID_Persona(int ID_Persona) {
                return ((PersonaRow)(this.Rows.Find(new object[] {
                            ID_Persona})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                PersonaDataTable cln = ((PersonaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new PersonaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID_Persona = base.Columns["ID_Persona"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnCUI = base.Columns["CUI"];
                this.columnNo_Registro = base.Columns["No_Registro"];
                this.columnNo_Cedula = base.Columns["No_Cedula"];
                this.columnSexo = base.Columns["Sexo"];
                this.columnFecha_Nacimiento = base.Columns["Fecha_Nacimiento"];
                this.columnID_Comunidad = base.Columns["ID_Comunidad"];
                this.columnCodigo = base.Columns["Codigo"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID_Persona = new global::System.Data.DataColumn("ID_Persona", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Persona);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnCUI = new global::System.Data.DataColumn("CUI", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCUI);
                this.columnNo_Registro = new global::System.Data.DataColumn("No_Registro", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Registro);
                this.columnNo_Cedula = new global::System.Data.DataColumn("No_Cedula", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNo_Cedula);
                this.columnSexo = new global::System.Data.DataColumn("Sexo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSexo);
                this.columnFecha_Nacimiento = new global::System.Data.DataColumn("Fecha_Nacimiento", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFecha_Nacimiento);
                this.columnID_Comunidad = new global::System.Data.DataColumn("ID_Comunidad", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_Comunidad);
                this.columnCodigo = new global::System.Data.DataColumn("Codigo", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCodigo);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_Persona}, true));
                this.columnID_Persona.AutoIncrement = true;
                this.columnID_Persona.AutoIncrementSeed = -1;
                this.columnID_Persona.AutoIncrementStep = -1;
                this.columnID_Persona.AllowDBNull = false;
                this.columnID_Persona.ReadOnly = true;
                this.columnID_Persona.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 255;
                this.columnCUI.MaxLength = 10;
                this.columnNo_Registro.MaxLength = 3;
                this.columnSexo.MaxLength = 1;
                this.columnCodigo.MaxLength = 25;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow NewPersonaRow() {
                return ((PersonaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new PersonaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(PersonaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.PersonaRowChanged != null)) {
                    this.PersonaRowChanged(this, new PersonaRowChangeEvent(((PersonaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.PersonaRowChanging != null)) {
                    this.PersonaRowChanging(this, new PersonaRowChangeEvent(((PersonaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.PersonaRowDeleted != null)) {
                    this.PersonaRowDeleted(this, new PersonaRowChangeEvent(((PersonaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.PersonaRowDeleting != null)) {
                    this.PersonaRowDeleting(this, new PersonaRowChangeEvent(((PersonaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovePersonaRow(PersonaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "PersonaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tip_Cargo_AbonoDataTable : global::System.Data.TypedTableBase<Tip_Cargo_AbonoRow> {
            
            private global::System.Data.DataColumn columnTip_Cargo_Abono;
            
            private global::System.Data.DataColumn columnDescripcion;
            
            private global::System.Data.DataColumn columnOperacion;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoDataTable() {
                this.TableName = "Tip_Cargo_Abono";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tip_Cargo_AbonoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tip_Cargo_AbonoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tip_Cargo_AbonoColumn {
                get {
                    return this.columnTip_Cargo_Abono;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DescripcionColumn {
                get {
                    return this.columnDescripcion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn OperacionColumn {
                get {
                    return this.columnOperacion;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRow this[int index] {
                get {
                    return ((Tip_Cargo_AbonoRow)(this.Rows[index]));
                }
            }
            
            public event Tip_Cargo_AbonoRowChangeEventHandler Tip_Cargo_AbonoRowChanging;
            
            public event Tip_Cargo_AbonoRowChangeEventHandler Tip_Cargo_AbonoRowChanged;
            
            public event Tip_Cargo_AbonoRowChangeEventHandler Tip_Cargo_AbonoRowDeleting;
            
            public event Tip_Cargo_AbonoRowChangeEventHandler Tip_Cargo_AbonoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTip_Cargo_AbonoRow(Tip_Cargo_AbonoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRow AddTip_Cargo_AbonoRow(string Descripcion, int Operacion) {
                Tip_Cargo_AbonoRow rowTip_Cargo_AbonoRow = ((Tip_Cargo_AbonoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Descripcion,
                        Operacion};
                rowTip_Cargo_AbonoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTip_Cargo_AbonoRow);
                return rowTip_Cargo_AbonoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRow FindByTip_Cargo_Abono(int Tip_Cargo_Abono) {
                return ((Tip_Cargo_AbonoRow)(this.Rows.Find(new object[] {
                            Tip_Cargo_Abono})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tip_Cargo_AbonoDataTable cln = ((Tip_Cargo_AbonoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tip_Cargo_AbonoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTip_Cargo_Abono = base.Columns["Tip_Cargo_Abono"];
                this.columnDescripcion = base.Columns["Descripcion"];
                this.columnOperacion = base.Columns["Operacion"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTip_Cargo_Abono = new global::System.Data.DataColumn("Tip_Cargo_Abono", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip_Cargo_Abono);
                this.columnDescripcion = new global::System.Data.DataColumn("Descripcion", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescripcion);
                this.columnOperacion = new global::System.Data.DataColumn("Operacion", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnOperacion);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTip_Cargo_Abono}, true));
                this.columnTip_Cargo_Abono.AutoIncrement = true;
                this.columnTip_Cargo_Abono.AutoIncrementSeed = -1;
                this.columnTip_Cargo_Abono.AutoIncrementStep = -1;
                this.columnTip_Cargo_Abono.AllowDBNull = false;
                this.columnTip_Cargo_Abono.ReadOnly = true;
                this.columnTip_Cargo_Abono.Unique = true;
                this.columnDescripcion.AllowDBNull = false;
                this.columnDescripcion.MaxLength = 255;
                this.columnOperacion.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRow NewTip_Cargo_AbonoRow() {
                return ((Tip_Cargo_AbonoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tip_Cargo_AbonoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tip_Cargo_AbonoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tip_Cargo_AbonoRowChanged != null)) {
                    this.Tip_Cargo_AbonoRowChanged(this, new Tip_Cargo_AbonoRowChangeEvent(((Tip_Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tip_Cargo_AbonoRowChanging != null)) {
                    this.Tip_Cargo_AbonoRowChanging(this, new Tip_Cargo_AbonoRowChangeEvent(((Tip_Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tip_Cargo_AbonoRowDeleted != null)) {
                    this.Tip_Cargo_AbonoRowDeleted(this, new Tip_Cargo_AbonoRowChangeEvent(((Tip_Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tip_Cargo_AbonoRowDeleting != null)) {
                    this.Tip_Cargo_AbonoRowDeleting(this, new Tip_Cargo_AbonoRowChangeEvent(((Tip_Cargo_AbonoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTip_Cargo_AbonoRow(Tip_Cargo_AbonoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tip_Cargo_AbonoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class Tip_ParametroDataTable : global::System.Data.TypedTableBase<Tip_ParametroRow> {
            
            private global::System.Data.DataColumn columnTip_Parametro;
            
            private global::System.Data.DataColumn columnNombre;
            
            private global::System.Data.DataColumn columnValor;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroDataTable() {
                this.TableName = "Tip_Parametro";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tip_ParametroDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected Tip_ParametroDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tip_ParametroColumn {
                get {
                    return this.columnTip_Parametro;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NombreColumn {
                get {
                    return this.columnNombre;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ValorColumn {
                get {
                    return this.columnValor;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRow this[int index] {
                get {
                    return ((Tip_ParametroRow)(this.Rows[index]));
                }
            }
            
            public event Tip_ParametroRowChangeEventHandler Tip_ParametroRowChanging;
            
            public event Tip_ParametroRowChangeEventHandler Tip_ParametroRowChanged;
            
            public event Tip_ParametroRowChangeEventHandler Tip_ParametroRowDeleting;
            
            public event Tip_ParametroRowChangeEventHandler Tip_ParametroRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTip_ParametroRow(Tip_ParametroRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRow AddTip_ParametroRow(string Nombre, string Valor) {
                Tip_ParametroRow rowTip_ParametroRow = ((Tip_ParametroRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        Nombre,
                        Valor};
                rowTip_ParametroRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTip_ParametroRow);
                return rowTip_ParametroRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRow FindByTip_Parametro(int Tip_Parametro) {
                return ((Tip_ParametroRow)(this.Rows.Find(new object[] {
                            Tip_Parametro})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                Tip_ParametroDataTable cln = ((Tip_ParametroDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new Tip_ParametroDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnTip_Parametro = base.Columns["Tip_Parametro"];
                this.columnNombre = base.Columns["Nombre"];
                this.columnValor = base.Columns["Valor"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnTip_Parametro = new global::System.Data.DataColumn("Tip_Parametro", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTip_Parametro);
                this.columnNombre = new global::System.Data.DataColumn("Nombre", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNombre);
                this.columnValor = new global::System.Data.DataColumn("Valor", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnValor);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnTip_Parametro}, true));
                this.columnTip_Parametro.AutoIncrement = true;
                this.columnTip_Parametro.AutoIncrementSeed = -1;
                this.columnTip_Parametro.AutoIncrementStep = -1;
                this.columnTip_Parametro.AllowDBNull = false;
                this.columnTip_Parametro.ReadOnly = true;
                this.columnTip_Parametro.Unique = true;
                this.columnNombre.AllowDBNull = false;
                this.columnNombre.MaxLength = 255;
                this.columnValor.AllowDBNull = false;
                this.columnValor.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRow NewTip_ParametroRow() {
                return ((Tip_ParametroRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new Tip_ParametroRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(Tip_ParametroRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.Tip_ParametroRowChanged != null)) {
                    this.Tip_ParametroRowChanged(this, new Tip_ParametroRowChangeEvent(((Tip_ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.Tip_ParametroRowChanging != null)) {
                    this.Tip_ParametroRowChanging(this, new Tip_ParametroRowChangeEvent(((Tip_ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.Tip_ParametroRowDeleted != null)) {
                    this.Tip_ParametroRowDeleted(this, new Tip_ParametroRowChangeEvent(((Tip_ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.Tip_ParametroRowDeleting != null)) {
                    this.Tip_ParametroRowDeleting(this, new Tip_ParametroRowChangeEvent(((Tip_ParametroRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTip_ParametroRow(Tip_ParametroRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "Tip_ParametroDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class TIPO_SERVICIODataTable : global::System.Data.TypedTableBase<TIPO_SERVICIORow> {
            
            private global::System.Data.DataColumn columnNO_TIPO_SERVICIO;
            
            private global::System.Data.DataColumn columnTIPO_SERVICIO;
            
            private global::System.Data.DataColumn columnPARAM_CUOTA_KW;
            
            private global::System.Data.DataColumn columnPARAM_CUOTA_FIJA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIODataTable() {
                this.TableName = "TIPO_SERVICIO";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPO_SERVICIODataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected TIPO_SERVICIODataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NO_TIPO_SERVICIOColumn {
                get {
                    return this.columnNO_TIPO_SERVICIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn TIPO_SERVICIOColumn {
                get {
                    return this.columnTIPO_SERVICIO;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARAM_CUOTA_KWColumn {
                get {
                    return this.columnPARAM_CUOTA_KW;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PARAM_CUOTA_FIJAColumn {
                get {
                    return this.columnPARAM_CUOTA_FIJA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORow this[int index] {
                get {
                    return ((TIPO_SERVICIORow)(this.Rows[index]));
                }
            }
            
            public event TIPO_SERVICIORowChangeEventHandler TIPO_SERVICIORowChanging;
            
            public event TIPO_SERVICIORowChangeEventHandler TIPO_SERVICIORowChanged;
            
            public event TIPO_SERVICIORowChangeEventHandler TIPO_SERVICIORowDeleting;
            
            public event TIPO_SERVICIORowChangeEventHandler TIPO_SERVICIORowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddTIPO_SERVICIORow(TIPO_SERVICIORow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORow AddTIPO_SERVICIORow(string TIPO_SERVICIO, int PARAM_CUOTA_KW, int PARAM_CUOTA_FIJA) {
                TIPO_SERVICIORow rowTIPO_SERVICIORow = ((TIPO_SERVICIORow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        TIPO_SERVICIO,
                        PARAM_CUOTA_KW,
                        PARAM_CUOTA_FIJA};
                rowTIPO_SERVICIORow.ItemArray = columnValuesArray;
                this.Rows.Add(rowTIPO_SERVICIORow);
                return rowTIPO_SERVICIORow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORow FindByNO_TIPO_SERVICIO(int NO_TIPO_SERVICIO) {
                return ((TIPO_SERVICIORow)(this.Rows.Find(new object[] {
                            NO_TIPO_SERVICIO})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                TIPO_SERVICIODataTable cln = ((TIPO_SERVICIODataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new TIPO_SERVICIODataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnNO_TIPO_SERVICIO = base.Columns["NO_TIPO_SERVICIO"];
                this.columnTIPO_SERVICIO = base.Columns["TIPO_SERVICIO"];
                this.columnPARAM_CUOTA_KW = base.Columns["PARAM_CUOTA_KW"];
                this.columnPARAM_CUOTA_FIJA = base.Columns["PARAM_CUOTA_FIJA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnNO_TIPO_SERVICIO = new global::System.Data.DataColumn("NO_TIPO_SERVICIO", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNO_TIPO_SERVICIO);
                this.columnTIPO_SERVICIO = new global::System.Data.DataColumn("TIPO_SERVICIO", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTIPO_SERVICIO);
                this.columnPARAM_CUOTA_KW = new global::System.Data.DataColumn("PARAM_CUOTA_KW", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAM_CUOTA_KW);
                this.columnPARAM_CUOTA_FIJA = new global::System.Data.DataColumn("PARAM_CUOTA_FIJA", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPARAM_CUOTA_FIJA);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnNO_TIPO_SERVICIO}, true));
                this.columnNO_TIPO_SERVICIO.AutoIncrement = true;
                this.columnNO_TIPO_SERVICIO.AutoIncrementSeed = -1;
                this.columnNO_TIPO_SERVICIO.AutoIncrementStep = -1;
                this.columnNO_TIPO_SERVICIO.AllowDBNull = false;
                this.columnNO_TIPO_SERVICIO.ReadOnly = true;
                this.columnNO_TIPO_SERVICIO.Unique = true;
                this.columnTIPO_SERVICIO.AllowDBNull = false;
                this.columnTIPO_SERVICIO.MaxLength = 255;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORow NewTIPO_SERVICIORow() {
                return ((TIPO_SERVICIORow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new TIPO_SERVICIORow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(TIPO_SERVICIORow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.TIPO_SERVICIORowChanged != null)) {
                    this.TIPO_SERVICIORowChanged(this, new TIPO_SERVICIORowChangeEvent(((TIPO_SERVICIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.TIPO_SERVICIORowChanging != null)) {
                    this.TIPO_SERVICIORowChanging(this, new TIPO_SERVICIORowChangeEvent(((TIPO_SERVICIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.TIPO_SERVICIORowDeleted != null)) {
                    this.TIPO_SERVICIORowDeleted(this, new TIPO_SERVICIORowChangeEvent(((TIPO_SERVICIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.TIPO_SERVICIORowDeleting != null)) {
                    this.TIPO_SERVICIORowDeleting(this, new TIPO_SERVICIORowChangeEvent(((TIPO_SERVICIORow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveTIPO_SERVICIORow(TIPO_SERVICIORow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                MCHDataSet1 ds = new MCHDataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "TIPO_SERVICIODataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Cargo_AbonoRow : global::System.Data.DataRow {
            
            private Cargo_AbonoDataTable tableCargo_Abono;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Cargo_AbonoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCargo_Abono = ((Cargo_AbonoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Cargo_Abono {
                get {
                    return ((int)(this[this.tableCargo_Abono.ID_Cargo_AbonoColumn]));
                }
                set {
                    this[this.tableCargo_Abono.ID_Cargo_AbonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Lectura {
                get {
                    try {
                        return ((int)(this[this.tableCargo_Abono.ID_LecturaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Lectura\' in table \'Cargo_Abono\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCargo_Abono.ID_LecturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tip_Cargo_Abono {
                get {
                    return ((int)(this[this.tableCargo_Abono.Tip_Cargo_AbonoColumn]));
                }
                set {
                    this[this.tableCargo_Abono.Tip_Cargo_AbonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Monto {
                get {
                    return ((decimal)(this[this.tableCargo_Abono.MontoColumn]));
                }
                set {
                    this[this.tableCargo_Abono.MontoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    try {
                        return ((string)(this[this.tableCargo_Abono.DescripcionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Descripcion\' in table \'Cargo_Abono\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCargo_Abono.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fec_Transac {
                get {
                    return ((global::System.DateTime)(this[this.tableCargo_Abono.Fec_TransacColumn]));
                }
                set {
                    this[this.tableCargo_Abono.Fec_TransacColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow LecturaRow {
                get {
                    return ((LecturaRow)(this.GetParentRow(this.Table.ParentRelations["FK_Cargo_Abono_Lectura"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Cargo_Abono_Lectura"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRow Tip_Cargo_AbonoRow {
                get {
                    return ((Tip_Cargo_AbonoRow)(this.GetParentRow(this.Table.ParentRelations["FK_Cargo_Abono_Tip_Cargo_Abono"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Cargo_Abono_Tip_Cargo_Abono"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_LecturaNull() {
                return this.IsNull(this.tableCargo_Abono.ID_LecturaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_LecturaNull() {
                this[this.tableCargo_Abono.ID_LecturaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescripcionNull() {
                return this.IsNull(this.tableCargo_Abono.DescripcionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescripcionNull() {
                this[this.tableCargo_Abono.DescripcionColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ComunidadRow : global::System.Data.DataRow {
            
            private ComunidadDataTable tableComunidad;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ComunidadRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableComunidad = ((ComunidadDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Comunidad {
                get {
                    return ((int)(this[this.tableComunidad.ID_ComunidadColumn]));
                }
                set {
                    this[this.tableComunidad.ID_ComunidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Hidroelectrica {
                get {
                    return ((int)(this[this.tableComunidad.ID_HidroelectricaColumn]));
                }
                set {
                    this[this.tableComunidad.ID_HidroelectricaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tableComunidad.NombreColumn]));
                }
                set {
                    this[this.tableComunidad.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRow HidroelectricaRow {
                get {
                    return ((HidroelectricaRow)(this.GetParentRow(this.Table.ParentRelations["FK_Comunidad_Hidroelectrica"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Comunidad_Hidroelectrica"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow[] GetContadorRows() {
                if ((this.Table.ChildRelations["FK_Contador_Comunidad"] == null)) {
                    return new ContadorRow[0];
                }
                else {
                    return ((ContadorRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Contador_Comunidad"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow[] GetPersonaRows() {
                if ((this.Table.ChildRelations["FK_ID_Comunidad"] == null)) {
                    return new PersonaRow[0];
                }
                else {
                    return ((PersonaRow[])(base.GetChildRows(this.Table.ChildRelations["FK_ID_Comunidad"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContadorRow : global::System.Data.DataRow {
            
            private ContadorDataTable tableContador;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContadorRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContador = ((ContadorDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Contador {
                get {
                    return ((string)(this[this.tableContador.ID_ContadorColumn]));
                }
                set {
                    this[this.tableContador.ID_ContadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Comunidad {
                get {
                    return ((int)(this[this.tableContador.ID_ComunidadColumn]));
                }
                set {
                    this[this.tableContador.ID_ComunidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Direccion {
                get {
                    try {
                        return ((string)(this[this.tableContador.DireccionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Direccion\' in table \'Contador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContador.DireccionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No_Poste {
                get {
                    try {
                        return ((string)(this[this.tableContador.No_PosteColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Poste\' in table \'Contador\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContador.No_PosteColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int TIPO_SERVICIO {
                get {
                    return ((int)(this[this.tableContador.TIPO_SERVICIOColumn]));
                }
                set {
                    this[this.tableContador.TIPO_SERVICIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow ComunidadRow {
                get {
                    return ((ComunidadRow)(this.GetParentRow(this.Table.ParentRelations["FK_Contador_Comunidad"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Contador_Comunidad"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORow TIPO_SERVICIORow {
                get {
                    return ((TIPO_SERVICIORow)(this.GetParentRow(this.Table.ParentRelations["FK_CONTADOR_TIPO_SERVICIO"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_CONTADOR_TIPO_SERVICIO"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDireccionNull() {
                return this.IsNull(this.tableContador.DireccionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDireccionNull() {
                this[this.tableContador.DireccionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_PosteNull() {
                return this.IsNull(this.tableContador.No_PosteColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_PosteNull() {
                this[this.tableContador.No_PosteColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow[] GetContratoRows() {
                if ((this.Table.ChildRelations["fk_contrato_contador"] == null)) {
                    return new ContratoRow[0];
                }
                else {
                    return ((ContratoRow[])(base.GetChildRows(this.Table.ChildRelations["fk_contrato_contador"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ContratoRow : global::System.Data.DataRow {
            
            private ContratoDataTable tableContrato;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ContratoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableContrato = ((ContratoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Contrato {
                get {
                    return ((string)(this[this.tableContrato.ID_ContratoColumn]));
                }
                set {
                    this[this.tableContrato.ID_ContratoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Persona {
                get {
                    return ((int)(this[this.tableContrato.ID_PersonaColumn]));
                }
                set {
                    this[this.tableContrato.ID_PersonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Contador {
                get {
                    return ((string)(this[this.tableContrato.ID_ContadorColumn]));
                }
                set {
                    this[this.tableContrato.ID_ContadorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fec_Inicio {
                get {
                    return ((global::System.DateTime)(this[this.tableContrato.Fec_InicioColumn]));
                }
                set {
                    this[this.tableContrato.Fec_InicioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fec_Fin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableContrato.Fec_FinColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fec_Fin\' in table \'Contrato\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableContrato.Fec_FinColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow ContadorRow {
                get {
                    return ((ContadorRow)(this.GetParentRow(this.Table.ParentRelations["fk_contrato_contador"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["fk_contrato_contador"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow PersonaRow {
                get {
                    return ((PersonaRow)(this.GetParentRow(this.Table.ParentRelations["FK_Contrato_Persona"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Contrato_Persona"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFec_FinNull() {
                return this.IsNull(this.tableContrato.Fec_FinColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFec_FinNull() {
                this[this.tableContrato.Fec_FinColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow[] GetLecturaRows() {
                if ((this.Table.ChildRelations["FK_Lectura_Contrato"] == null)) {
                    return new LecturaRow[0];
                }
                else {
                    return ((LecturaRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Lectura_Contrato"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class HidroelectricaRow : global::System.Data.DataRow {
            
            private HidroelectricaDataTable tableHidroelectrica;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal HidroelectricaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableHidroelectrica = ((HidroelectricaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Hidroelectrica {
                get {
                    return ((int)(this[this.tableHidroelectrica.ID_HidroelectricaColumn]));
                }
                set {
                    this[this.tableHidroelectrica.ID_HidroelectricaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tableHidroelectrica.NombreColumn]));
                }
                set {
                    this[this.tableHidroelectrica.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow[] GetComunidadRows() {
                if ((this.Table.ChildRelations["FK_Comunidad_Hidroelectrica"] == null)) {
                    return new ComunidadRow[0];
                }
                else {
                    return ((ComunidadRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Comunidad_Hidroelectrica"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class LecturaRow : global::System.Data.DataRow {
            
            private LecturaDataTable tableLectura;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal LecturaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableLectura = ((LecturaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Lectura {
                get {
                    return ((int)(this[this.tableLectura.ID_LecturaColumn]));
                }
                set {
                    this[this.tableLectura.ID_LecturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ID_Contrato {
                get {
                    return ((string)(this[this.tableLectura.ID_ContratoColumn]));
                }
                set {
                    this[this.tableLectura.ID_ContratoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Lectura {
                get {
                    return ((global::System.DateTime)(this[this.tableLectura.Fecha_LecturaColumn]));
                }
                set {
                    this[this.tableLectura.Fecha_LecturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Lectura {
                get {
                    return ((int)(this[this.tableLectura.LecturaColumn]));
                }
                set {
                    this[this.tableLectura.LecturaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow ContratoRow {
                get {
                    return ((ContratoRow)(this.GetParentRow(this.Table.ParentRelations["FK_Lectura_Contrato"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Lectura_Contrato"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow[] GetCargo_AbonoRows() {
                if ((this.Table.ChildRelations["FK_Cargo_Abono_Lectura"] == null)) {
                    return new Cargo_AbonoRow[0];
                }
                else {
                    return ((Cargo_AbonoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Cargo_Abono_Lectura"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ParametroRow : global::System.Data.DataRow {
            
            private ParametroDataTable tableParametro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ParametroRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableParametro = ((ParametroDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Parametro {
                get {
                    return ((int)(this[this.tableParametro.ID_ParametroColumn]));
                }
                set {
                    this[this.tableParametro.ID_ParametroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tip_Parametro {
                get {
                    return ((int)(this[this.tableParametro.Tip_ParametroColumn]));
                }
                set {
                    this[this.tableParametro.Tip_ParametroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Parametro {
                get {
                    return ((string)(this[this.tableParametro.ParametroColumn]));
                }
                set {
                    this[this.tableParametro.ParametroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fec_Inicio {
                get {
                    return ((global::System.DateTime)(this[this.tableParametro.Fec_InicioColumn]));
                }
                set {
                    this[this.tableParametro.Fec_InicioColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fec_fin {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableParametro.Fec_finColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fec_fin\' in table \'Parametro\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableParametro.Fec_finColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRow Tip_ParametroRow {
                get {
                    return ((Tip_ParametroRow)(this.GetParentRow(this.Table.ParentRelations["FK_Parametro_Tip_Parametro"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_Parametro_Tip_Parametro"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFec_finNull() {
                return this.IsNull(this.tableParametro.Fec_finColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFec_finNull() {
                this[this.tableParametro.Fec_finColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PasswordRow : global::System.Data.DataRow {
            
            private PasswordDataTable tablePassword;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PasswordRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePassword = ((PasswordDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Password {
                get {
                    return ((int)(this[this.tablePassword.ID_PasswordColumn]));
                }
                set {
                    this[this.tablePassword.ID_PasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Password {
                get {
                    return ((string)(this[this.tablePassword.PasswordColumn]));
                }
                set {
                    this[this.tablePassword.PasswordColumn] = value;
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class PersonaRow : global::System.Data.DataRow {
            
            private PersonaDataTable tablePersona;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal PersonaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablePersona = ((PersonaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Persona {
                get {
                    return ((int)(this[this.tablePersona.ID_PersonaColumn]));
                }
                set {
                    this[this.tablePersona.ID_PersonaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tablePersona.NombreColumn]));
                }
                set {
                    this[this.tablePersona.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string CUI {
                get {
                    try {
                        return ((string)(this[this.tablePersona.CUIColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CUI\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.CUIColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string No_Registro {
                get {
                    try {
                        return ((string)(this[this.tablePersona.No_RegistroColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Registro\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.No_RegistroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int No_Cedula {
                get {
                    try {
                        return ((int)(this[this.tablePersona.No_CedulaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'No_Cedula\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.No_CedulaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sexo {
                get {
                    try {
                        return ((string)(this[this.tablePersona.SexoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sexo\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.SexoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Fecha_Nacimiento {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tablePersona.Fecha_NacimientoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Fecha_Nacimiento\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.Fecha_NacimientoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID_Comunidad {
                get {
                    try {
                        return ((int)(this[this.tablePersona.ID_ComunidadColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ID_Comunidad\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.ID_ComunidadColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Codigo {
                get {
                    try {
                        return ((string)(this[this.tablePersona.CodigoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Codigo\' in table \'Persona\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablePersona.CodigoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow ComunidadRow {
                get {
                    return ((ComunidadRow)(this.GetParentRow(this.Table.ParentRelations["FK_ID_Comunidad"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["FK_ID_Comunidad"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCUINull() {
                return this.IsNull(this.tablePersona.CUIColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCUINull() {
                this[this.tablePersona.CUIColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_RegistroNull() {
                return this.IsNull(this.tablePersona.No_RegistroColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_RegistroNull() {
                this[this.tablePersona.No_RegistroColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNo_CedulaNull() {
                return this.IsNull(this.tablePersona.No_CedulaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNo_CedulaNull() {
                this[this.tablePersona.No_CedulaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSexoNull() {
                return this.IsNull(this.tablePersona.SexoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSexoNull() {
                this[this.tablePersona.SexoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsFecha_NacimientoNull() {
                return this.IsNull(this.tablePersona.Fecha_NacimientoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetFecha_NacimientoNull() {
                this[this.tablePersona.Fecha_NacimientoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsID_ComunidadNull() {
                return this.IsNull(this.tablePersona.ID_ComunidadColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetID_ComunidadNull() {
                this[this.tablePersona.ID_ComunidadColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCodigoNull() {
                return this.IsNull(this.tablePersona.CodigoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCodigoNull() {
                this[this.tablePersona.CodigoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow[] GetContratoRows() {
                if ((this.Table.ChildRelations["FK_Contrato_Persona"] == null)) {
                    return new ContratoRow[0];
                }
                else {
                    return ((ContratoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Contrato_Persona"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tip_Cargo_AbonoRow : global::System.Data.DataRow {
            
            private Tip_Cargo_AbonoDataTable tableTip_Cargo_Abono;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tip_Cargo_AbonoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTip_Cargo_Abono = ((Tip_Cargo_AbonoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tip_Cargo_Abono {
                get {
                    return ((int)(this[this.tableTip_Cargo_Abono.Tip_Cargo_AbonoColumn]));
                }
                set {
                    this[this.tableTip_Cargo_Abono.Tip_Cargo_AbonoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Descripcion {
                get {
                    return ((string)(this[this.tableTip_Cargo_Abono.DescripcionColumn]));
                }
                set {
                    this[this.tableTip_Cargo_Abono.DescripcionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Operacion {
                get {
                    return ((int)(this[this.tableTip_Cargo_Abono.OperacionColumn]));
                }
                set {
                    this[this.tableTip_Cargo_Abono.OperacionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow[] GetCargo_AbonoRows() {
                if ((this.Table.ChildRelations["FK_Cargo_Abono_Tip_Cargo_Abono"] == null)) {
                    return new Cargo_AbonoRow[0];
                }
                else {
                    return ((Cargo_AbonoRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Cargo_Abono_Tip_Cargo_Abono"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class Tip_ParametroRow : global::System.Data.DataRow {
            
            private Tip_ParametroDataTable tableTip_Parametro;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal Tip_ParametroRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTip_Parametro = ((Tip_ParametroDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Tip_Parametro {
                get {
                    return ((int)(this[this.tableTip_Parametro.Tip_ParametroColumn]));
                }
                set {
                    this[this.tableTip_Parametro.Tip_ParametroColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Nombre {
                get {
                    return ((string)(this[this.tableTip_Parametro.NombreColumn]));
                }
                set {
                    this[this.tableTip_Parametro.NombreColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Valor {
                get {
                    return ((string)(this[this.tableTip_Parametro.ValorColumn]));
                }
                set {
                    this[this.tableTip_Parametro.ValorColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRow[] GetParametroRows() {
                if ((this.Table.ChildRelations["FK_Parametro_Tip_Parametro"] == null)) {
                    return new ParametroRow[0];
                }
                else {
                    return ((ParametroRow[])(base.GetChildRows(this.Table.ChildRelations["FK_Parametro_Tip_Parametro"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class TIPO_SERVICIORow : global::System.Data.DataRow {
            
            private TIPO_SERVICIODataTable tableTIPO_SERVICIO;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal TIPO_SERVICIORow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableTIPO_SERVICIO = ((TIPO_SERVICIODataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NO_TIPO_SERVICIO {
                get {
                    return ((int)(this[this.tableTIPO_SERVICIO.NO_TIPO_SERVICIOColumn]));
                }
                set {
                    this[this.tableTIPO_SERVICIO.NO_TIPO_SERVICIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string TIPO_SERVICIO {
                get {
                    return ((string)(this[this.tableTIPO_SERVICIO.TIPO_SERVICIOColumn]));
                }
                set {
                    this[this.tableTIPO_SERVICIO.TIPO_SERVICIOColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARAM_CUOTA_KW {
                get {
                    try {
                        return ((int)(this[this.tableTIPO_SERVICIO.PARAM_CUOTA_KWColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARAM_CUOTA_KW\' in table \'TIPO_SERVICIO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPO_SERVICIO.PARAM_CUOTA_KWColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PARAM_CUOTA_FIJA {
                get {
                    try {
                        return ((int)(this[this.tableTIPO_SERVICIO.PARAM_CUOTA_FIJAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PARAM_CUOTA_FIJA\' in table \'TIPO_SERVICIO\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableTIPO_SERVICIO.PARAM_CUOTA_FIJAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAM_CUOTA_KWNull() {
                return this.IsNull(this.tableTIPO_SERVICIO.PARAM_CUOTA_KWColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAM_CUOTA_KWNull() {
                this[this.tableTIPO_SERVICIO.PARAM_CUOTA_KWColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPARAM_CUOTA_FIJANull() {
                return this.IsNull(this.tableTIPO_SERVICIO.PARAM_CUOTA_FIJAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPARAM_CUOTA_FIJANull() {
                this[this.tableTIPO_SERVICIO.PARAM_CUOTA_FIJAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow[] GetContadorRows() {
                if ((this.Table.ChildRelations["FK_CONTADOR_TIPO_SERVICIO"] == null)) {
                    return new ContadorRow[0];
                }
                else {
                    return ((ContadorRow[])(base.GetChildRows(this.Table.ChildRelations["FK_CONTADOR_TIPO_SERVICIO"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Cargo_AbonoRowChangeEvent : global::System.EventArgs {
            
            private Cargo_AbonoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRowChangeEvent(Cargo_AbonoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Cargo_AbonoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ComunidadRowChangeEvent : global::System.EventArgs {
            
            private ComunidadRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRowChangeEvent(ComunidadRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ComunidadRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContadorRowChangeEvent : global::System.EventArgs {
            
            private ContadorRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRowChangeEvent(ContadorRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContadorRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ContratoRowChangeEvent : global::System.EventArgs {
            
            private ContratoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRowChangeEvent(ContratoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ContratoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class HidroelectricaRowChangeEvent : global::System.EventArgs {
            
            private HidroelectricaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRowChangeEvent(HidroelectricaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public HidroelectricaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class LecturaRowChangeEvent : global::System.EventArgs {
            
            private LecturaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRowChangeEvent(LecturaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public LecturaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ParametroRowChangeEvent : global::System.EventArgs {
            
            private ParametroRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRowChangeEvent(ParametroRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ParametroRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PasswordRowChangeEvent : global::System.EventArgs {
            
            private PasswordRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PasswordRowChangeEvent(PasswordRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PasswordRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class PersonaRowChangeEvent : global::System.EventArgs {
            
            private PersonaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRowChangeEvent(PersonaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public PersonaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tip_Cargo_AbonoRowChangeEvent : global::System.EventArgs {
            
            private Tip_Cargo_AbonoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRowChangeEvent(Tip_Cargo_AbonoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_Cargo_AbonoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class Tip_ParametroRowChangeEvent : global::System.EventArgs {
            
            private Tip_ParametroRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRowChangeEvent(Tip_ParametroRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public Tip_ParametroRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class TIPO_SERVICIORowChangeEvent : global::System.EventArgs {
            
            private TIPO_SERVICIORow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORowChangeEvent(TIPO_SERVICIORow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public TIPO_SERVICIORow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace WindowsFormsApplication2.MCHDataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Cargo_AbonoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Cargo_AbonoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Cargo_Abono";
            tableMapping.ColumnMappings.Add("ID_Cargo_Abono", "ID_Cargo_Abono");
            tableMapping.ColumnMappings.Add("ID_Lectura", "ID_Lectura");
            tableMapping.ColumnMappings.Add("Tip_Cargo_Abono", "Tip_Cargo_Abono");
            tableMapping.ColumnMappings.Add("Monto", "Monto");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Fec_Transac", "Fec_Transac");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Cargo_Abono] WHERE (([ID_Cargo_Abono] = @Original_ID_Cargo_Abono) AND ((@IsNull_ID_Lectura = 1 AND [ID_Lectura] IS NULL) OR ([ID_Lectura] = @Original_ID_Lectura)) AND ([Tip_Cargo_Abono] = @Original_Tip_Cargo_Abono) AND ([Monto] = @Original_Monto) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcion)) AND ([Fec_Transac] = @Original_Fec_Transac))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Cargo_Abono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Transac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Transac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Cargo_Abono] ([ID_Lectura], [Tip_Cargo_Abono], [Monto], [Descripcion], [Fec_Transac]) VALUES (@ID_Lectura, @Tip_Cargo_Abono, @Monto, @Descripcion, @Fec_Transac);
SELECT ID_Cargo_Abono, ID_Lectura, Tip_Cargo_Abono, Monto, Descripcion, Fec_Transac FROM Cargo_Abono WHERE (ID_Cargo_Abono = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Transac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Transac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Cargo_Abono] SET [ID_Lectura] = @ID_Lectura, [Tip_Cargo_Abono] = @Tip_Cargo_Abono, [Monto] = @Monto, [Descripcion] = @Descripcion, [Fec_Transac] = @Fec_Transac WHERE (([ID_Cargo_Abono] = @Original_ID_Cargo_Abono) AND ((@IsNull_ID_Lectura = 1 AND [ID_Lectura] IS NULL) OR ([ID_Lectura] = @Original_ID_Lectura)) AND ([Tip_Cargo_Abono] = @Original_Tip_Cargo_Abono) AND ([Monto] = @Original_Monto) AND ((@IsNull_Descripcion = 1 AND [Descripcion] IS NULL) OR ([Descripcion] = @Original_Descripcion)) AND ([Fec_Transac] = @Original_Fec_Transac));
SELECT ID_Cargo_Abono, ID_Lectura, Tip_Cargo_Abono, Monto, Descripcion, Fec_Transac FROM Cargo_Abono WHERE (ID_Cargo_Abono = @ID_Cargo_Abono)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Monto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Monto", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Transac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Transac", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Cargo_Abono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Monto", global::System.Data.SqlDbType.Decimal, 0, global::System.Data.ParameterDirection.Input, 10, 2, "Monto", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Descripcion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Transac", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Transac", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Cargo_Abono", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Cargo_Abono", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Cargo_Abono, ID_Lectura, Tip_Cargo_Abono, Monto, Descripcion, Fec_Trans" +
                "ac FROM dbo.Cargo_Abono";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.Cargo_AbonoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.Cargo_AbonoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.Cargo_AbonoDataTable dataTable = new MCHDataSet1.Cargo_AbonoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.Cargo_AbonoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Cargo_Abono");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Cargo_Abono, global::System.Nullable<int> Original_ID_Lectura, int Original_Tip_Cargo_Abono, decimal Original_Monto, string Original_Descripcion, System.DateTime Original_Fec_Transac) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Cargo_Abono));
            if ((Original_ID_Lectura.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_ID_Lectura.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Tip_Cargo_Abono));
            this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_Monto));
            if ((Original_Descripcion == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[7].Value = ((System.DateTime)(Original_Fec_Transac));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(global::System.Nullable<int> ID_Lectura, int Tip_Cargo_Abono, decimal Monto, string Descripcion, System.DateTime Fec_Transac) {
            if ((ID_Lectura.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Lectura.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Tip_Cargo_Abono));
            this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(Monto));
            if ((Descripcion == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Fec_Transac));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ID_Lectura, int Tip_Cargo_Abono, decimal Monto, string Descripcion, System.DateTime Fec_Transac, int Original_ID_Cargo_Abono, global::System.Nullable<int> Original_ID_Lectura, int Original_Tip_Cargo_Abono, decimal Original_Monto, string Original_Descripcion, System.DateTime Original_Fec_Transac, int ID_Cargo_Abono) {
            if ((ID_Lectura.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Lectura.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Tip_Cargo_Abono));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Monto));
            if ((Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Fec_Transac));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_ID_Cargo_Abono));
            if ((Original_ID_Lectura.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(Original_ID_Lectura.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_Tip_Cargo_Abono));
            this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_Monto));
            if ((Original_Descripcion == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[12].Value = ((System.DateTime)(Original_Fec_Transac));
            this.Adapter.UpdateCommand.Parameters[13].Value = ((int)(ID_Cargo_Abono));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<int> ID_Lectura, int Tip_Cargo_Abono, decimal Monto, string Descripcion, System.DateTime Fec_Transac, int Original_ID_Cargo_Abono, global::System.Nullable<int> Original_ID_Lectura, int Original_Tip_Cargo_Abono, decimal Original_Monto, string Original_Descripcion, System.DateTime Original_Fec_Transac) {
            return this.Update(ID_Lectura, Tip_Cargo_Abono, Monto, Descripcion, Fec_Transac, Original_ID_Cargo_Abono, Original_ID_Lectura, Original_Tip_Cargo_Abono, Original_Monto, Original_Descripcion, Original_Fec_Transac, Original_ID_Cargo_Abono);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ComunidadTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ComunidadTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Comunidad";
            tableMapping.ColumnMappings.Add("ID_Comunidad", "ID_Comunidad");
            tableMapping.ColumnMappings.Add("ID_Hidroelectrica", "ID_Hidroelectrica");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Comunidad] WHERE (([ID_Comunidad] = @Original_ID_Comunidad) AN" +
                "D ([ID_Hidroelectrica] = @Original_ID_Hidroelectrica) AND ([Nombre] = @Original_" +
                "Nombre))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Comunidad] ([ID_Hidroelectrica], [Nombre]) VALUES (@ID_Hidroel" +
                "ectrica, @Nombre);\r\nSELECT ID_Comunidad, ID_Hidroelectrica, Nombre FROM Comunida" +
                "d WHERE (ID_Comunidad = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Comunidad] SET [ID_Hidroelectrica] = @ID_Hidroelectrica, [Nombre] = @Nombre WHERE (([ID_Comunidad] = @Original_ID_Comunidad) AND ([ID_Hidroelectrica] = @Original_ID_Hidroelectrica) AND ([Nombre] = @Original_Nombre));
SELECT ID_Comunidad, ID_Hidroelectrica, Nombre FROM Comunidad WHERE (ID_Comunidad = @ID_Comunidad)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Comunidad", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Comunidad, ID_Hidroelectrica, Nombre FROM dbo.Comunidad";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.ComunidadDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.ComunidadDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.ComunidadDataTable dataTable = new MCHDataSet1.ComunidadDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.ComunidadDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Comunidad");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Comunidad, int Original_ID_Hidroelectrica, string Original_Nombre) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Comunidad));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Hidroelectrica));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Hidroelectrica, string Nombre) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Hidroelectrica));
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Hidroelectrica, string Nombre, int Original_ID_Comunidad, int Original_ID_Hidroelectrica, string Original_Nombre, int ID_Comunidad) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(ID_Hidroelectrica));
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_ID_Comunidad));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Hidroelectrica));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(ID_Comunidad));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Hidroelectrica, string Nombre, int Original_ID_Comunidad, int Original_ID_Hidroelectrica, string Original_Nombre) {
            return this.Update(ID_Hidroelectrica, Nombre, Original_ID_Comunidad, Original_ID_Hidroelectrica, Original_Nombre, Original_ID_Comunidad);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContadorTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContadorTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Contador";
            tableMapping.ColumnMappings.Add("ID_Contador", "ID_Contador");
            tableMapping.ColumnMappings.Add("ID_Comunidad", "ID_Comunidad");
            tableMapping.ColumnMappings.Add("Direccion", "Direccion");
            tableMapping.ColumnMappings.Add("No_Poste", "No_Poste");
            tableMapping.ColumnMappings.Add("TIPO_SERVICIO", "TIPO_SERVICIO");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Contador] WHERE (([ID_Contador] = @Original_ID_Contador) AND ([ID_Comunidad] = @Original_ID_Comunidad) AND ((@IsNull_Direccion = 1 AND [Direccion] IS NULL) OR ([Direccion] = @Original_Direccion)) AND ((@IsNull_No_Poste = 1 AND [No_Poste] IS NULL) OR ([No_Poste] = @Original_No_Poste)) AND ([TIPO_SERVICIO] = @Original_TIPO_SERVICIO))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Direccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Direccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_No_Poste", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Poste", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Poste", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Poste", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Contador] ([ID_Contador], [ID_Comunidad], [Direccion], [No_Poste], [TIPO_SERVICIO]) VALUES (@ID_Contador, @ID_Comunidad, @Direccion, @No_Poste, @TIPO_SERVICIO);
SELECT ID_Contador, ID_Comunidad, Direccion, No_Poste, TIPO_SERVICIO FROM Contador WHERE (ID_Contador = @ID_Contador)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Direccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Poste", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Poste", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Contador] SET [ID_Contador] = @ID_Contador, [ID_Comunidad] = @ID_Comunidad, [Direccion] = @Direccion, [No_Poste] = @No_Poste, [TIPO_SERVICIO] = @TIPO_SERVICIO WHERE (([ID_Contador] = @Original_ID_Contador) AND ([ID_Comunidad] = @Original_ID_Comunidad) AND ((@IsNull_Direccion = 1 AND [Direccion] IS NULL) OR ([Direccion] = @Original_Direccion)) AND ((@IsNull_No_Poste = 1 AND [No_Poste] IS NULL) OR ([No_Poste] = @Original_No_Poste)) AND ([TIPO_SERVICIO] = @Original_TIPO_SERVICIO));
SELECT ID_Contador, ID_Comunidad, Direccion, No_Poste, TIPO_SERVICIO FROM Contador WHERE (ID_Contador = @ID_Contador)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Direccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Poste", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Poste", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Direccion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Direccion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Direccion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_No_Poste", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Poste", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Poste", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Poste", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Contador, ID_Comunidad, Direccion, No_Poste, TIPO_SERVICIO FROM dbo.Con" +
                "tador";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.ContadorDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.ContadorDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.ContadorDataTable dataTable = new MCHDataSet1.ContadorDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.ContadorDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Contador");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID_Contador, int Original_ID_Comunidad, string Original_Direccion, string Original_No_Poste, int Original_TIPO_SERVICIO) {
            if ((Original_ID_Contador == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contador");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID_Contador));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Comunidad));
            if ((Original_Direccion == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_Direccion));
            }
            if ((Original_No_Poste == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_No_Poste));
            }
            this.Adapter.DeleteCommand.Parameters[6].Value = ((int)(Original_TIPO_SERVICIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_Contador, int ID_Comunidad, string Direccion, string No_Poste, int TIPO_SERVICIO) {
            if ((ID_Contador == null)) {
                throw new global::System.ArgumentNullException("ID_Contador");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_Contador));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Comunidad));
            if ((Direccion == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(Direccion));
            }
            if ((No_Poste == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(No_Poste));
            }
            this.Adapter.InsertCommand.Parameters[4].Value = ((int)(TIPO_SERVICIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID_Contador, int ID_Comunidad, string Direccion, string No_Poste, int TIPO_SERVICIO, string Original_ID_Contador, int Original_ID_Comunidad, string Original_Direccion, string Original_No_Poste, int Original_TIPO_SERVICIO) {
            if ((ID_Contador == null)) {
                throw new global::System.ArgumentNullException("ID_Contador");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_Contador));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Comunidad));
            if ((Direccion == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Direccion));
            }
            if ((No_Poste == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(No_Poste));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(TIPO_SERVICIO));
            if ((Original_ID_Contador == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contador");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ID_Contador));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Comunidad));
            if ((Original_Direccion == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((string)(Original_Direccion));
            }
            if ((Original_No_Poste == null)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((string)(Original_No_Poste));
            }
            this.Adapter.UpdateCommand.Parameters[11].Value = ((int)(Original_TIPO_SERVICIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Comunidad, string Direccion, string No_Poste, int TIPO_SERVICIO, string Original_ID_Contador, int Original_ID_Comunidad, string Original_Direccion, string Original_No_Poste, int Original_TIPO_SERVICIO) {
            return this.Update(Original_ID_Contador, ID_Comunidad, Direccion, No_Poste, TIPO_SERVICIO, Original_ID_Contador, Original_ID_Comunidad, Original_Direccion, Original_No_Poste, Original_TIPO_SERVICIO);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ContratoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ContratoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Contrato";
            tableMapping.ColumnMappings.Add("ID_Contrato", "ID_Contrato");
            tableMapping.ColumnMappings.Add("ID_Persona", "ID_Persona");
            tableMapping.ColumnMappings.Add("ID_Contador", "ID_Contador");
            tableMapping.ColumnMappings.Add("Fec_Inicio", "Fec_Inicio");
            tableMapping.ColumnMappings.Add("Fec_Fin", "Fec_Fin");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Contrato] WHERE (([ID_Contrato] = @Original_ID_Contrato) AND ([ID_Persona] = @Original_ID_Persona) AND ([ID_Contador] = @Original_ID_Contador) AND ([Fec_Inicio] = @Original_Fec_Inicio) AND ((@IsNull_Fec_Fin = 1 AND [Fec_Fin] IS NULL) OR ([Fec_Fin] = @Original_Fec_Fin)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Persona", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fec_Fin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Fin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Fin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Contrato] ([ID_Contrato], [ID_Persona], [ID_Contador], [Fec_Inicio], [Fec_Fin]) VALUES (@ID_Contrato, @ID_Persona, @ID_Contador, @Fec_Inicio, @Fec_Fin);
SELECT ID_Contrato, ID_Persona, ID_Contador, Fec_Inicio, Fec_Fin FROM Contrato WHERE (ID_Contrato = @ID_Contrato)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Persona", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Fin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Contrato] SET [ID_Contrato] = @ID_Contrato, [ID_Persona] = @ID_Persona, [ID_Contador] = @ID_Contador, [Fec_Inicio] = @Fec_Inicio, [Fec_Fin] = @Fec_Fin WHERE (([ID_Contrato] = @Original_ID_Contrato) AND ([ID_Persona] = @Original_ID_Persona) AND ([ID_Contador] = @Original_ID_Contador) AND ([Fec_Inicio] = @Original_Fec_Inicio) AND ((@IsNull_Fec_Fin = 1 AND [Fec_Fin] IS NULL) OR ([Fec_Fin] = @Original_Fec_Fin)));
SELECT ID_Contrato, ID_Persona, ID_Contador, Fec_Inicio, Fec_Fin FROM Contrato WHERE (ID_Contrato = @ID_Contrato)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Persona", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Fin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Persona", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contador", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contador", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fec_Fin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Fin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Fin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Contrato, ID_Persona, ID_Contador, Fec_Inicio, Fec_Fin FROM dbo.Contrat" +
                "o";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.ContratoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.ContratoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.ContratoDataTable dataTable = new MCHDataSet1.ContratoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.ContratoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Contrato");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(string Original_ID_Contrato, int Original_ID_Persona, string Original_ID_Contador, System.DateTime Original_Fec_Inicio, global::System.Nullable<global::System.DateTime> Original_Fec_Fin) {
            if ((Original_ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contrato");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[0].Value = ((string)(Original_ID_Contrato));
            }
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_ID_Persona));
            if ((Original_ID_Contador == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contador");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ID_Contador));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fec_Inicio));
            if ((Original_Fec_Fin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Fec_Fin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_Contrato, int ID_Persona, string ID_Contador, System.DateTime Fec_Inicio, global::System.Nullable<global::System.DateTime> Fec_Fin) {
            if ((ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("ID_Contrato");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_Contrato));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(ID_Persona));
            if ((ID_Contador == null)) {
                throw new global::System.ArgumentNullException("ID_Contador");
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ID_Contador));
            }
            this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fec_Inicio));
            if ((Fec_Fin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(Fec_Fin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID_Contrato, int ID_Persona, string ID_Contador, System.DateTime Fec_Inicio, global::System.Nullable<global::System.DateTime> Fec_Fin, string Original_ID_Contrato, int Original_ID_Persona, string Original_ID_Contador, System.DateTime Original_Fec_Inicio, global::System.Nullable<global::System.DateTime> Original_Fec_Fin) {
            if ((ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("ID_Contrato");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_Contrato));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(ID_Persona));
            if ((ID_Contador == null)) {
                throw new global::System.ArgumentNullException("ID_Contador");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ID_Contador));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fec_Inicio));
            if ((Fec_Fin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(Fec_Fin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contrato");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_ID_Contrato));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_ID_Persona));
            if ((Original_ID_Contador == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contador");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_ID_Contador));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(Original_Fec_Inicio));
            if ((Original_Fec_Fin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((System.DateTime)(Original_Fec_Fin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int ID_Persona, string ID_Contador, System.DateTime Fec_Inicio, global::System.Nullable<global::System.DateTime> Fec_Fin, string Original_ID_Contrato, int Original_ID_Persona, string Original_ID_Contador, System.DateTime Original_Fec_Inicio, global::System.Nullable<global::System.DateTime> Original_Fec_Fin) {
            return this.Update(Original_ID_Contrato, ID_Persona, ID_Contador, Fec_Inicio, Fec_Fin, Original_ID_Contrato, Original_ID_Persona, Original_ID_Contador, Original_Fec_Inicio, Original_Fec_Fin);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class HidroelectricaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public HidroelectricaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Hidroelectrica";
            tableMapping.ColumnMappings.Add("ID_Hidroelectrica", "ID_Hidroelectrica");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Hidroelectrica] WHERE (([ID_Hidroelectrica] = @Original_ID_Hid" +
                "roelectrica) AND ([Nombre] = @Original_Nombre))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Hidroelectrica] ([Nombre]) VALUES (@Nombre);\r\nSELECT ID_Hidroe" +
                "lectrica, Nombre FROM Hidroelectrica WHERE (ID_Hidroelectrica = SCOPE_IDENTITY()" +
                ")";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[Hidroelectrica] SET [Nombre] = @Nombre WHERE (([ID_Hidroelectrica] " +
                "= @Original_ID_Hidroelectrica) AND ([Nombre] = @Original_Nombre));\r\nSELECT ID_Hi" +
                "droelectrica, Nombre FROM Hidroelectrica WHERE (ID_Hidroelectrica = @ID_Hidroele" +
                "ctrica)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Hidroelectrica", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Hidroelectrica", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Hidroelectrica, Nombre FROM dbo.Hidroelectrica";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.HidroelectricaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.HidroelectricaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.HidroelectricaDataTable dataTable = new MCHDataSet1.HidroelectricaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.HidroelectricaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Hidroelectrica");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Hidroelectrica, string Original_Nombre) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Hidroelectrica));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, int Original_ID_Hidroelectrica, string Original_Nombre, int ID_Hidroelectrica) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Original_ID_Hidroelectrica));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(Original_Nombre));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(ID_Hidroelectrica));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, int Original_ID_Hidroelectrica, string Original_Nombre) {
            return this.Update(Nombre, Original_ID_Hidroelectrica, Original_Nombre, Original_ID_Hidroelectrica);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class LecturaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public LecturaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Lectura";
            tableMapping.ColumnMappings.Add("ID_Lectura", "ID_Lectura");
            tableMapping.ColumnMappings.Add("ID_Contrato", "ID_Contrato");
            tableMapping.ColumnMappings.Add("Fecha_Lectura", "Fecha_Lectura");
            tableMapping.ColumnMappings.Add("Lectura", "Lectura");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Lectura] WHERE (([ID_Lectura] = @Original_ID_Lectura) AND ([ID" +
                "_Contrato] = @Original_ID_Contrato) AND ([Fecha_Lectura] = @Original_Fecha_Lectu" +
                "ra) AND ([Lectura] = @Original_Lectura))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Lectura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Lectura] ([ID_Contrato], [Fecha_Lectura], [Lectura]) VALUES (@" +
                "ID_Contrato, @Fecha_Lectura, @Lectura);\r\nSELECT ID_Lectura, ID_Contrato, Fecha_L" +
                "ectura, Lectura FROM Lectura WHERE (ID_Lectura = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Lectura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Lectura] SET [ID_Contrato] = @ID_Contrato, [Fecha_Lectura] = @Fecha_Lectura, [Lectura] = @Lectura WHERE (([ID_Lectura] = @Original_ID_Lectura) AND ([ID_Contrato] = @Original_ID_Contrato) AND ([Fecha_Lectura] = @Original_Fecha_Lectura) AND ([Lectura] = @Original_Lectura));
SELECT ID_Lectura, ID_Contrato, Fecha_Lectura, Lectura FROM Lectura WHERE (ID_Lectura = @ID_Lectura)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Lectura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Contrato", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Contrato", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Lectura", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Lectura", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Lectura", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Lectura", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Lectura", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Lectura, ID_Contrato, Fecha_Lectura, Lectura FROM dbo.Lectura";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.LecturaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.LecturaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.LecturaDataTable dataTable = new MCHDataSet1.LecturaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.LecturaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Lectura");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Lectura, string Original_ID_Contrato, System.DateTime Original_Fecha_Lectura, int Original_Lectura) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Lectura));
            if ((Original_ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contrato");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_ID_Contrato));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((System.DateTime)(Original_Fecha_Lectura));
            this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_Lectura));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string ID_Contrato, System.DateTime Fecha_Lectura, int Lectura) {
            if ((ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("ID_Contrato");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(ID_Contrato));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((System.DateTime)(Fecha_Lectura));
            this.Adapter.InsertCommand.Parameters[2].Value = ((int)(Lectura));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID_Contrato, System.DateTime Fecha_Lectura, int Lectura, int Original_ID_Lectura, string Original_ID_Contrato, System.DateTime Original_Fecha_Lectura, int Original_Lectura, int ID_Lectura) {
            if ((ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("ID_Contrato");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(ID_Contrato));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((System.DateTime)(Fecha_Lectura));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Lectura));
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_ID_Lectura));
            if ((Original_ID_Contrato == null)) {
                throw new global::System.ArgumentNullException("Original_ID_Contrato");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_ID_Contrato));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Original_Fecha_Lectura));
            this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_Lectura));
            this.Adapter.UpdateCommand.Parameters[7].Value = ((int)(ID_Lectura));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string ID_Contrato, System.DateTime Fecha_Lectura, int Lectura, int Original_ID_Lectura, string Original_ID_Contrato, System.DateTime Original_Fecha_Lectura, int Original_Lectura) {
            return this.Update(ID_Contrato, Fecha_Lectura, Lectura, Original_ID_Lectura, Original_ID_Contrato, Original_Fecha_Lectura, Original_Lectura, Original_ID_Lectura);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ParametroTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ParametroTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Parametro";
            tableMapping.ColumnMappings.Add("ID_Parametro", "ID_Parametro");
            tableMapping.ColumnMappings.Add("Tip_Parametro", "Tip_Parametro");
            tableMapping.ColumnMappings.Add("Parametro", "Parametro");
            tableMapping.ColumnMappings.Add("Fec_Inicio", "Fec_Inicio");
            tableMapping.ColumnMappings.Add("Fec_fin", "Fec_fin");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Parametro] WHERE (([ID_Parametro] = @Original_ID_Parametro) AND ([Tip_Parametro] = @Original_Tip_Parametro) AND ([Parametro] = @Original_Parametro) AND ([Fec_Inicio] = @Original_Fec_Inicio) AND ((@IsNull_Fec_fin = 1 AND [Fec_fin] IS NULL) OR ([Fec_fin] = @Original_Fec_fin)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Parametro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fec_fin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_fin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_fin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Parametro] ([Tip_Parametro], [Parametro], [Fec_Inicio], [Fec_fin]) VALUES (@Tip_Parametro, @Parametro, @Fec_Inicio, @Fec_fin);
SELECT ID_Parametro, Tip_Parametro, Parametro, Fec_Inicio, Fec_fin FROM Parametro WHERE (ID_Parametro = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tip_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parametro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parametro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_fin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Parametro] SET [Tip_Parametro] = @Tip_Parametro, [Parametro] = @Parametro, [Fec_Inicio] = @Fec_Inicio, [Fec_fin] = @Fec_fin WHERE (([ID_Parametro] = @Original_ID_Parametro) AND ([Tip_Parametro] = @Original_Tip_Parametro) AND ([Parametro] = @Original_Parametro) AND ([Fec_Inicio] = @Original_Fec_Inicio) AND ((@IsNull_Fec_fin = 1 AND [Fec_fin] IS NULL) OR ([Fec_fin] = @Original_Fec_fin)));
SELECT ID_Parametro, Tip_Parametro, Parametro, Fec_Inicio, Fec_fin FROM Parametro WHERE (ID_Parametro = @ID_Parametro)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tip_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Parametro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parametro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fec_fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_fin", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Parametro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_Inicio", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_Inicio", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fec_fin", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_fin", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fec_fin", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fec_fin", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Parametro", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Parametro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Parametro, Tip_Parametro, Parametro, Fec_Inicio, Fec_fin FROM dbo.Param" +
                "etro";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.ParametroDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.ParametroDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.ParametroDataTable dataTable = new MCHDataSet1.ParametroDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.ParametroDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Parametro");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Parametro, int Original_Tip_Parametro, string Original_Parametro, System.DateTime Original_Fec_Inicio, global::System.Nullable<global::System.DateTime> Original_Fec_fin) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Parametro));
            this.Adapter.DeleteCommand.Parameters[1].Value = ((int)(Original_Tip_Parametro));
            if ((Original_Parametro == null)) {
                throw new global::System.ArgumentNullException("Original_Parametro");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Parametro));
            }
            this.Adapter.DeleteCommand.Parameters[3].Value = ((System.DateTime)(Original_Fec_Inicio));
            if ((Original_Fec_fin.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((System.DateTime)(Original_Fec_fin.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int Tip_Parametro, string Parametro, System.DateTime Fec_Inicio, global::System.Nullable<global::System.DateTime> Fec_fin) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(Tip_Parametro));
            if ((Parametro == null)) {
                throw new global::System.ArgumentNullException("Parametro");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Parametro));
            }
            this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(Fec_Inicio));
            if ((Fec_fin.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(Fec_fin.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Tip_Parametro, string Parametro, System.DateTime Fec_Inicio, global::System.Nullable<global::System.DateTime> Fec_fin, int Original_ID_Parametro, int Original_Tip_Parametro, string Original_Parametro, System.DateTime Original_Fec_Inicio, global::System.Nullable<global::System.DateTime> Original_Fec_fin, int ID_Parametro) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((int)(Tip_Parametro));
            if ((Parametro == null)) {
                throw new global::System.ArgumentNullException("Parametro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Parametro));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(Fec_Inicio));
            if ((Fec_fin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(Fec_fin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_ID_Parametro));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Original_Tip_Parametro));
            if ((Original_Parametro == null)) {
                throw new global::System.ArgumentNullException("Original_Parametro");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(Original_Parametro));
            }
            this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_Fec_Inicio));
            if ((Original_Fec_fin.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((System.DateTime)(Original_Fec_fin.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[10].Value = ((int)(ID_Parametro));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(int Tip_Parametro, string Parametro, System.DateTime Fec_Inicio, global::System.Nullable<global::System.DateTime> Fec_fin, int Original_ID_Parametro, int Original_Tip_Parametro, string Original_Parametro, System.DateTime Original_Fec_Inicio, global::System.Nullable<global::System.DateTime> Original_Fec_fin) {
            return this.Update(Tip_Parametro, Parametro, Fec_Inicio, Fec_fin, Original_ID_Parametro, Original_Tip_Parametro, Original_Parametro, Original_Fec_Inicio, Original_Fec_fin, Original_ID_Parametro);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PasswordTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PasswordTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Password";
            tableMapping.ColumnMappings.Add("ID_Password", "ID_Password");
            tableMapping.ColumnMappings.Add("Password", "Password");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Password] ([ID_Password], [Password]) VALUES (@ID_Password, @P" +
                "assword)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Password", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Password", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Password", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Password, Password FROM dbo.Password";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.PasswordDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.PasswordDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.PasswordDataTable dataTable = new MCHDataSet1.PasswordDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.PasswordDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Password");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(int ID_Password, string Password) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((int)(ID_Password));
            if ((Password == null)) {
                throw new global::System.ArgumentNullException("Password");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Password));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class PersonaTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public PersonaTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Persona";
            tableMapping.ColumnMappings.Add("ID_Persona", "ID_Persona");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("CUI", "CUI");
            tableMapping.ColumnMappings.Add("No_Registro", "No_Registro");
            tableMapping.ColumnMappings.Add("No_Cedula", "No_Cedula");
            tableMapping.ColumnMappings.Add("Sexo", "Sexo");
            tableMapping.ColumnMappings.Add("Fecha_Nacimiento", "Fecha_Nacimiento");
            tableMapping.ColumnMappings.Add("ID_Comunidad", "ID_Comunidad");
            tableMapping.ColumnMappings.Add("Codigo", "Codigo");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[Persona] WHERE (([ID_Persona] = @Original_ID_Persona) AND ([Nombre] = @Original_Nombre) AND ((@IsNull_CUI = 1 AND [CUI] IS NULL) OR ([CUI] = @Original_CUI)) AND ((@IsNull_No_Registro = 1 AND [No_Registro] IS NULL) OR ([No_Registro] = @Original_No_Registro)) AND ((@IsNull_No_Cedula = 1 AND [No_Cedula] IS NULL) OR ([No_Cedula] = @Original_No_Cedula)) AND ((@IsNull_Sexo = 1 AND [Sexo] IS NULL) OR ([Sexo] = @Original_Sexo)) AND ((@IsNull_Fecha_Nacimiento = 1 AND [Fecha_Nacimiento] IS NULL) OR ([Fecha_Nacimiento] = @Original_Fecha_Nacimiento)) AND ((@IsNull_ID_Comunidad = 1 AND [ID_Comunidad] IS NULL) OR ([ID_Comunidad] = @Original_ID_Comunidad)) AND ((@IsNull_Codigo = 1 AND [Codigo] IS NULL) OR ([Codigo] = @Original_Codigo)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Persona", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_No_Registro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Registro", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Registro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Registro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_No_Cedula", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cedula", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Cedula", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cedula", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sexo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_Nacimiento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nacimiento", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Nacimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nacimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Codigo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[Persona] ([Nombre], [CUI], [No_Registro], [No_Cedula], [Sexo], [Fecha_Nacimiento], [ID_Comunidad], [Codigo]) VALUES (@Nombre, @CUI, @No_Registro, @No_Cedula, @Sexo, @Fecha_Nacimiento, @ID_Comunidad, @Codigo);
SELECT ID_Persona, Nombre, CUI, No_Registro, No_Cedula, Sexo, Fecha_Nacimiento, ID_Comunidad, Codigo FROM Persona WHERE (ID_Persona = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Registro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Registro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Cedula", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cedula", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Nacimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nacimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Persona] SET [Nombre] = @Nombre, [CUI] = @CUI, [No_Registro] = @No_Registro, [No_Cedula] = @No_Cedula, [Sexo] = @Sexo, [Fecha_Nacimiento] = @Fecha_Nacimiento, [ID_Comunidad] = @ID_Comunidad, [Codigo] = @Codigo WHERE (([ID_Persona] = @Original_ID_Persona) AND ([Nombre] = @Original_Nombre) AND ((@IsNull_CUI = 1 AND [CUI] IS NULL) OR ([CUI] = @Original_CUI)) AND ((@IsNull_No_Registro = 1 AND [No_Registro] IS NULL) OR ([No_Registro] = @Original_No_Registro)) AND ((@IsNull_No_Cedula = 1 AND [No_Cedula] IS NULL) OR ([No_Cedula] = @Original_No_Cedula)) AND ((@IsNull_Sexo = 1 AND [Sexo] IS NULL) OR ([Sexo] = @Original_Sexo)) AND ((@IsNull_Fecha_Nacimiento = 1 AND [Fecha_Nacimiento] IS NULL) OR ([Fecha_Nacimiento] = @Original_Fecha_Nacimiento)) AND ((@IsNull_ID_Comunidad = 1 AND [ID_Comunidad] IS NULL) OR ([ID_Comunidad] = @Original_ID_Comunidad)) AND ((@IsNull_Codigo = 1 AND [Codigo] IS NULL) OR ([Codigo] = @Original_Codigo)));
SELECT ID_Persona, Nombre, CUI, No_Registro, No_Cedula, Sexo, Fecha_Nacimiento, ID_Comunidad, Codigo FROM Persona WHERE (ID_Persona = @ID_Persona)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@CUI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUI", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Registro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Registro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@No_Cedula", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cedula", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Fecha_Nacimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nacimiento", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Codigo", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Persona", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_CUI", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUI", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_CUI", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "CUI", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_No_Registro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Registro", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Registro", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Registro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_No_Cedula", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cedula", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_No_Cedula", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "No_Cedula", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Sexo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Sexo", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Sexo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Fecha_Nacimiento", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nacimiento", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Fecha_Nacimiento", global::System.Data.SqlDbType.DateTime, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Fecha_Nacimiento", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_ID_Comunidad", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Comunidad", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_Codigo", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Codigo", global::System.Data.SqlDbType.NChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Codigo", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ID_Persona", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "ID_Persona", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_Persona, Nombre, CUI, No_Registro, No_Cedula, Sexo, Fecha_Nacimiento, I" +
                "D_Comunidad, Codigo FROM dbo.Persona";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.PersonaDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.PersonaDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.PersonaDataTable dataTable = new MCHDataSet1.PersonaDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.PersonaDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Persona");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_ID_Persona, string Original_Nombre, string Original_CUI, string Original_No_Registro, global::System.Nullable<int> Original_No_Cedula, string Original_Sexo, global::System.Nullable<global::System.DateTime> Original_Fecha_Nacimiento, global::System.Nullable<int> Original_ID_Comunidad, string Original_Codigo) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_ID_Persona));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre));
            }
            if ((Original_CUI == null)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((string)(Original_CUI));
            }
            if ((Original_No_Registro == null)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((string)(Original_No_Registro));
            }
            if ((Original_No_Cedula.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[7].Value = ((int)(Original_No_Cedula.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((Original_Sexo == null)) {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[9].Value = ((string)(Original_Sexo));
            }
            if ((Original_Fecha_Nacimiento.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[11].Value = ((System.DateTime)(Original_Fecha_Nacimiento.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Comunidad.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[13].Value = ((int)(Original_ID_Comunidad.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            if ((Original_Codigo == null)) {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[15].Value = ((string)(Original_Codigo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre, string CUI, string No_Registro, global::System.Nullable<int> No_Cedula, string Sexo, global::System.Nullable<global::System.DateTime> Fecha_Nacimiento, global::System.Nullable<int> ID_Comunidad, string Codigo) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            if ((CUI == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(CUI));
            }
            if ((No_Registro == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(No_Registro));
            }
            if ((No_Cedula.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((int)(No_Cedula.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Sexo == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(Sexo));
            }
            if ((Fecha_Nacimiento.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((System.DateTime)(Fecha_Nacimiento.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ID_Comunidad.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((int)(ID_Comunidad.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Codigo == null)) {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = ((string)(Codigo));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nombre, 
                    string CUI, 
                    string No_Registro, 
                    global::System.Nullable<int> No_Cedula, 
                    string Sexo, 
                    global::System.Nullable<global::System.DateTime> Fecha_Nacimiento, 
                    global::System.Nullable<int> ID_Comunidad, 
                    string Codigo, 
                    int Original_ID_Persona, 
                    string Original_Nombre, 
                    string Original_CUI, 
                    string Original_No_Registro, 
                    global::System.Nullable<int> Original_No_Cedula, 
                    string Original_Sexo, 
                    global::System.Nullable<global::System.DateTime> Original_Fecha_Nacimiento, 
                    global::System.Nullable<int> Original_ID_Comunidad, 
                    string Original_Codigo, 
                    int ID_Persona) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nombre));
            }
            if ((CUI == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(CUI));
            }
            if ((No_Registro == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(No_Registro));
            }
            if ((No_Cedula.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(No_Cedula.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Sexo == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Sexo));
            }
            if ((Fecha_Nacimiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((System.DateTime)(Fecha_Nacimiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ID_Comunidad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(ID_Comunidad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Codigo == null)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Codigo));
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_ID_Persona));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((string)(Original_Nombre));
            }
            if ((Original_CUI == null)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((string)(Original_CUI));
            }
            if ((Original_No_Registro == null)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((string)(Original_No_Registro));
            }
            if ((Original_No_Cedula.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((int)(Original_No_Cedula.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            if ((Original_Sexo == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_Sexo));
            }
            if ((Original_Fecha_Nacimiento.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((System.DateTime)(Original_Fecha_Nacimiento.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_Comunidad.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((int)(Original_ID_Comunidad.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            if ((Original_Codigo == null)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((string)(Original_Codigo));
            }
            this.Adapter.UpdateCommand.Parameters[24].Value = ((int)(ID_Persona));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string Nombre, 
                    string CUI, 
                    string No_Registro, 
                    global::System.Nullable<int> No_Cedula, 
                    string Sexo, 
                    global::System.Nullable<global::System.DateTime> Fecha_Nacimiento, 
                    global::System.Nullable<int> ID_Comunidad, 
                    string Codigo, 
                    int Original_ID_Persona, 
                    string Original_Nombre, 
                    string Original_CUI, 
                    string Original_No_Registro, 
                    global::System.Nullable<int> Original_No_Cedula, 
                    string Original_Sexo, 
                    global::System.Nullable<global::System.DateTime> Original_Fecha_Nacimiento, 
                    global::System.Nullable<int> Original_ID_Comunidad, 
                    string Original_Codigo) {
            return this.Update(Nombre, CUI, No_Registro, No_Cedula, Sexo, Fecha_Nacimiento, ID_Comunidad, Codigo, Original_ID_Persona, Original_Nombre, Original_CUI, Original_No_Registro, Original_No_Cedula, Original_Sexo, Original_Fecha_Nacimiento, Original_ID_Comunidad, Original_Codigo, Original_ID_Persona);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tip_Cargo_AbonoTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tip_Cargo_AbonoTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tip_Cargo_Abono";
            tableMapping.ColumnMappings.Add("Tip_Cargo_Abono", "Tip_Cargo_Abono");
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion");
            tableMapping.ColumnMappings.Add("Operacion", "Operacion");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Tip_Cargo_Abono] WHERE (([Tip_Cargo_Abono] = @Original_Tip_Car" +
                "go_Abono) AND ([Descripcion] = @Original_Descripcion) AND ([Operacion] = @Origin" +
                "al_Operacion))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Operacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tip_Cargo_Abono] ([Descripcion], [Operacion]) VALUES (@Descrip" +
                "cion, @Operacion);\r\nSELECT Tip_Cargo_Abono, Descripcion, Operacion FROM Tip_Carg" +
                "o_Abono WHERE (Tip_Cargo_Abono = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Operacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Tip_Cargo_Abono] SET [Descripcion] = @Descripcion, [Operacion] = @Operacion WHERE (([Tip_Cargo_Abono] = @Original_Tip_Cargo_Abono) AND ([Descripcion] = @Original_Descripcion) AND ([Operacion] = @Original_Operacion));
SELECT Tip_Cargo_Abono, Descripcion, Operacion FROM Tip_Cargo_Abono WHERE (Tip_Cargo_Abono = @Tip_Cargo_Abono)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Operacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operacion", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Descripcion", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Descripcion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Operacion", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Operacion", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tip_Cargo_Abono", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Cargo_Abono", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Tip_Cargo_Abono, Descripcion, Operacion FROM dbo.Tip_Cargo_Abono";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.Tip_Cargo_AbonoDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.Tip_Cargo_AbonoDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.Tip_Cargo_AbonoDataTable dataTable = new MCHDataSet1.Tip_Cargo_AbonoDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.Tip_Cargo_AbonoDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Tip_Cargo_Abono");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Tip_Cargo_Abono, string Original_Descripcion, int Original_Operacion) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Tip_Cargo_Abono));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.DeleteCommand.Parameters[2].Value = ((int)(Original_Operacion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Descripcion, int Operacion) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.InsertCommand.Parameters[1].Value = ((int)(Operacion));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Operacion, int Original_Tip_Cargo_Abono, string Original_Descripcion, int Original_Operacion, int Tip_Cargo_Abono) {
            if ((Descripcion == null)) {
                throw new global::System.ArgumentNullException("Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(Operacion));
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Tip_Cargo_Abono));
            if ((Original_Descripcion == null)) {
                throw new global::System.ArgumentNullException("Original_Descripcion");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Descripcion));
            }
            this.Adapter.UpdateCommand.Parameters[4].Value = ((int)(Original_Operacion));
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Tip_Cargo_Abono));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Descripcion, int Operacion, int Original_Tip_Cargo_Abono, string Original_Descripcion, int Original_Operacion) {
            return this.Update(Descripcion, Operacion, Original_Tip_Cargo_Abono, Original_Descripcion, Original_Operacion, Original_Tip_Cargo_Abono);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class Tip_ParametroTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Tip_ParametroTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "Tip_Parametro";
            tableMapping.ColumnMappings.Add("Tip_Parametro", "Tip_Parametro");
            tableMapping.ColumnMappings.Add("Nombre", "Nombre");
            tableMapping.ColumnMappings.Add("Valor", "Valor");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[Tip_Parametro] WHERE (([Tip_Parametro] = @Original_Tip_Paramet" +
                "ro) AND ([Nombre] = @Original_Nombre) AND ([Valor] = @Original_Valor))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Valor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[Tip_Parametro] ([Nombre], [Valor]) VALUES (@Nombre, @Valor);\r\n" +
                "SELECT Tip_Parametro, Nombre, Valor FROM Tip_Parametro WHERE (Tip_Parametro = SC" +
                "OPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[Tip_Parametro] SET [Nombre] = @Nombre, [Valor] = @Valor WHERE (([Tip_Parametro] = @Original_Tip_Parametro) AND ([Nombre] = @Original_Nombre) AND ([Valor] = @Original_Valor));
SELECT Tip_Parametro, Nombre, Valor FROM Tip_Parametro WHERE (Tip_Parametro = @Tip_Parametro)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Valor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Tip_Parametro", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Nombre", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Nombre", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_Valor", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "Valor", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Tip_Parametro", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "Tip_Parametro", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT Tip_Parametro, Nombre, Valor FROM dbo.Tip_Parametro";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.Tip_ParametroDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.Tip_ParametroDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.Tip_ParametroDataTable dataTable = new MCHDataSet1.Tip_ParametroDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.Tip_ParametroDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "Tip_Parametro");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_Tip_Parametro, string Original_Nombre, string Original_Valor) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_Tip_Parametro));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_Nombre));
            }
            if ((Original_Valor == null)) {
                throw new global::System.ArgumentNullException("Original_Valor");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_Valor));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string Nombre, string Valor) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(Nombre));
            }
            if ((Valor == null)) {
                throw new global::System.ArgumentNullException("Valor");
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(Valor));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, string Valor, int Original_Tip_Parametro, string Original_Nombre, string Original_Valor, int Tip_Parametro) {
            if ((Nombre == null)) {
                throw new global::System.ArgumentNullException("Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(Nombre));
            }
            if ((Valor == null)) {
                throw new global::System.ArgumentNullException("Valor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(Valor));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(Original_Tip_Parametro));
            if ((Original_Nombre == null)) {
                throw new global::System.ArgumentNullException("Original_Nombre");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(Original_Nombre));
            }
            if ((Original_Valor == null)) {
                throw new global::System.ArgumentNullException("Original_Valor");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_Valor));
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((int)(Tip_Parametro));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string Nombre, string Valor, int Original_Tip_Parametro, string Original_Nombre, string Original_Valor) {
            return this.Update(Nombre, Valor, Original_Tip_Parametro, Original_Nombre, Original_Valor, Original_Tip_Parametro);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class TIPO_SERVICIOTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TIPO_SERVICIOTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "TIPO_SERVICIO";
            tableMapping.ColumnMappings.Add("NO_TIPO_SERVICIO", "NO_TIPO_SERVICIO");
            tableMapping.ColumnMappings.Add("TIPO_SERVICIO", "TIPO_SERVICIO");
            tableMapping.ColumnMappings.Add("PARAM_CUOTA_KW", "PARAM_CUOTA_KW");
            tableMapping.ColumnMappings.Add("PARAM_CUOTA_FIJA", "PARAM_CUOTA_FIJA");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM [dbo].[TIPO_SERVICIO] WHERE (([NO_TIPO_SERVICIO] = @Original_NO_TIPO_SERVICIO) AND ([TIPO_SERVICIO] = @Original_TIPO_SERVICIO) AND ((@IsNull_PARAM_CUOTA_KW = 1 AND [PARAM_CUOTA_KW] IS NULL) OR ([PARAM_CUOTA_KW] = @Original_PARAM_CUOTA_KW)) AND ((@IsNull_PARAM_CUOTA_FIJA = 1 AND [PARAM_CUOTA_FIJA] IS NULL) OR ([PARAM_CUOTA_FIJA] = @Original_PARAM_CUOTA_FIJA)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NO_TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO_TIPO_SERVICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO_SERVICIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARAM_CUOTA_KW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_KW", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARAM_CUOTA_KW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_KW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARAM_CUOTA_FIJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_FIJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.DeleteCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARAM_CUOTA_FIJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_FIJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.InsertCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO [dbo].[TIPO_SERVICIO] ([TIPO_SERVICIO], [PARAM_CUOTA_KW], [PARAM_CUOTA_FIJA]) VALUES (@TIPO_SERVICIO, @PARAM_CUOTA_KW, @PARAM_CUOTA_FIJA);
SELECT NO_TIPO_SERVICIO, TIPO_SERVICIO, PARAM_CUOTA_KW, PARAM_CUOTA_FIJA FROM TIPO_SERVICIO WHERE (NO_TIPO_SERVICIO = SCOPE_IDENTITY())";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO_SERVICIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARAM_CUOTA_KW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_KW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.InsertCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARAM_CUOTA_FIJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_FIJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand = new global::System.Data.SqlClient.SqlCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE [dbo].[TIPO_SERVICIO] SET [TIPO_SERVICIO] = @TIPO_SERVICIO, [PARAM_CUOTA_KW] = @PARAM_CUOTA_KW, [PARAM_CUOTA_FIJA] = @PARAM_CUOTA_FIJA WHERE (([NO_TIPO_SERVICIO] = @Original_NO_TIPO_SERVICIO) AND ([TIPO_SERVICIO] = @Original_TIPO_SERVICIO) AND ((@IsNull_PARAM_CUOTA_KW = 1 AND [PARAM_CUOTA_KW] IS NULL) OR ([PARAM_CUOTA_KW] = @Original_PARAM_CUOTA_KW)) AND ((@IsNull_PARAM_CUOTA_FIJA = 1 AND [PARAM_CUOTA_FIJA] IS NULL) OR ([PARAM_CUOTA_FIJA] = @Original_PARAM_CUOTA_FIJA)));
SELECT NO_TIPO_SERVICIO, TIPO_SERVICIO, PARAM_CUOTA_KW, PARAM_CUOTA_FIJA FROM TIPO_SERVICIO WHERE (NO_TIPO_SERVICIO = @NO_TIPO_SERVICIO)";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@TIPO_SERVICIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARAM_CUOTA_KW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_KW", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@PARAM_CUOTA_FIJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_FIJA", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_NO_TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "NO_TIPO_SERVICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_TIPO_SERVICIO", global::System.Data.SqlDbType.VarChar, 0, global::System.Data.ParameterDirection.Input, 0, 0, "TIPO_SERVICIO", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARAM_CUOTA_KW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_KW", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARAM_CUOTA_KW", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_KW", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@IsNull_PARAM_CUOTA_FIJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_FIJA", global::System.Data.DataRowVersion.Original, true, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@Original_PARAM_CUOTA_FIJA", global::System.Data.SqlDbType.Int, 0, global::System.Data.ParameterDirection.Input, 0, 0, "PARAM_CUOTA_FIJA", global::System.Data.DataRowVersion.Original, false, null, "", "", ""));
            this._adapter.UpdateCommand.Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@NO_TIPO_SERVICIO", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 0, 0, "NO_TIPO_SERVICIO", global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::WindowsFormsApplication2.Properties.Settings.Default.MCHConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT NO_TIPO_SERVICIO, TIPO_SERVICIO, PARAM_CUOTA_KW, PARAM_CUOTA_FIJA FROM dbo" +
                ".TIPO_SERVICIO";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(MCHDataSet1.TIPO_SERVICIODataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual MCHDataSet1.TIPO_SERVICIODataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            MCHDataSet1.TIPO_SERVICIODataTable dataTable = new MCHDataSet1.TIPO_SERVICIODataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1.TIPO_SERVICIODataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(MCHDataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "TIPO_SERVICIO");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(int Original_NO_TIPO_SERVICIO, string Original_TIPO_SERVICIO, global::System.Nullable<int> Original_PARAM_CUOTA_KW, global::System.Nullable<int> Original_PARAM_CUOTA_FIJA) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((int)(Original_NO_TIPO_SERVICIO));
            if ((Original_TIPO_SERVICIO == null)) {
                throw new global::System.ArgumentNullException("Original_TIPO_SERVICIO");
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((string)(Original_TIPO_SERVICIO));
            }
            if ((Original_PARAM_CUOTA_KW.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[3].Value = ((int)(Original_PARAM_CUOTA_KW.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[2].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((Original_PARAM_CUOTA_FIJA.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[5].Value = ((int)(Original_PARAM_CUOTA_FIJA.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string TIPO_SERVICIO, global::System.Nullable<int> PARAM_CUOTA_KW, global::System.Nullable<int> PARAM_CUOTA_FIJA) {
            if ((TIPO_SERVICIO == null)) {
                throw new global::System.ArgumentNullException("TIPO_SERVICIO");
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(TIPO_SERVICIO));
            }
            if ((PARAM_CUOTA_KW.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((int)(PARAM_CUOTA_KW.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PARAM_CUOTA_FIJA.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((int)(PARAM_CUOTA_FIJA.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TIPO_SERVICIO, global::System.Nullable<int> PARAM_CUOTA_KW, global::System.Nullable<int> PARAM_CUOTA_FIJA, int Original_NO_TIPO_SERVICIO, string Original_TIPO_SERVICIO, global::System.Nullable<int> Original_PARAM_CUOTA_KW, global::System.Nullable<int> Original_PARAM_CUOTA_FIJA, int NO_TIPO_SERVICIO) {
            if ((TIPO_SERVICIO == null)) {
                throw new global::System.ArgumentNullException("TIPO_SERVICIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[0].Value = ((string)(TIPO_SERVICIO));
            }
            if ((PARAM_CUOTA_KW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((int)(PARAM_CUOTA_KW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((PARAM_CUOTA_FIJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((int)(PARAM_CUOTA_FIJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((int)(Original_NO_TIPO_SERVICIO));
            if ((Original_TIPO_SERVICIO == null)) {
                throw new global::System.ArgumentNullException("Original_TIPO_SERVICIO");
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_TIPO_SERVICIO));
            }
            if ((Original_PARAM_CUOTA_KW.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[6].Value = ((int)(Original_PARAM_CUOTA_KW.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_PARAM_CUOTA_FIJA.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((int)(Original_PARAM_CUOTA_FIJA.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[9].Value = ((int)(NO_TIPO_SERVICIO));
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string TIPO_SERVICIO, global::System.Nullable<int> PARAM_CUOTA_KW, global::System.Nullable<int> PARAM_CUOTA_FIJA, int Original_NO_TIPO_SERVICIO, string Original_TIPO_SERVICIO, global::System.Nullable<int> Original_PARAM_CUOTA_KW, global::System.Nullable<int> Original_PARAM_CUOTA_FIJA) {
            return this.Update(TIPO_SERVICIO, PARAM_CUOTA_KW, PARAM_CUOTA_FIJA, Original_NO_TIPO_SERVICIO, Original_TIPO_SERVICIO, Original_PARAM_CUOTA_KW, Original_PARAM_CUOTA_FIJA, Original_NO_TIPO_SERVICIO);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private Cargo_AbonoTableAdapter _cargo_AbonoTableAdapter;
        
        private ComunidadTableAdapter _comunidadTableAdapter;
        
        private ContadorTableAdapter _contadorTableAdapter;
        
        private ContratoTableAdapter _contratoTableAdapter;
        
        private HidroelectricaTableAdapter _hidroelectricaTableAdapter;
        
        private LecturaTableAdapter _lecturaTableAdapter;
        
        private ParametroTableAdapter _parametroTableAdapter;
        
        private PasswordTableAdapter _passwordTableAdapter;
        
        private PersonaTableAdapter _personaTableAdapter;
        
        private Tip_Cargo_AbonoTableAdapter _tip_Cargo_AbonoTableAdapter;
        
        private Tip_ParametroTableAdapter _tip_ParametroTableAdapter;
        
        private TIPO_SERVICIOTableAdapter _tIPO_SERVICIOTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Cargo_AbonoTableAdapter Cargo_AbonoTableAdapter {
            get {
                return this._cargo_AbonoTableAdapter;
            }
            set {
                this._cargo_AbonoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ComunidadTableAdapter ComunidadTableAdapter {
            get {
                return this._comunidadTableAdapter;
            }
            set {
                this._comunidadTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ContadorTableAdapter ContadorTableAdapter {
            get {
                return this._contadorTableAdapter;
            }
            set {
                this._contadorTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ContratoTableAdapter ContratoTableAdapter {
            get {
                return this._contratoTableAdapter;
            }
            set {
                this._contratoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public HidroelectricaTableAdapter HidroelectricaTableAdapter {
            get {
                return this._hidroelectricaTableAdapter;
            }
            set {
                this._hidroelectricaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public LecturaTableAdapter LecturaTableAdapter {
            get {
                return this._lecturaTableAdapter;
            }
            set {
                this._lecturaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public ParametroTableAdapter ParametroTableAdapter {
            get {
                return this._parametroTableAdapter;
            }
            set {
                this._parametroTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PasswordTableAdapter PasswordTableAdapter {
            get {
                return this._passwordTableAdapter;
            }
            set {
                this._passwordTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public PersonaTableAdapter PersonaTableAdapter {
            get {
                return this._personaTableAdapter;
            }
            set {
                this._personaTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tip_Cargo_AbonoTableAdapter Tip_Cargo_AbonoTableAdapter {
            get {
                return this._tip_Cargo_AbonoTableAdapter;
            }
            set {
                this._tip_Cargo_AbonoTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public Tip_ParametroTableAdapter Tip_ParametroTableAdapter {
            get {
                return this._tip_ParametroTableAdapter;
            }
            set {
                this._tip_ParametroTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" +
            "", "System.Drawing.Design.UITypeEditor")]
        public TIPO_SERVICIOTableAdapter TIPO_SERVICIOTableAdapter {
            get {
                return this._tIPO_SERVICIOTableAdapter;
            }
            set {
                this._tIPO_SERVICIOTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._cargo_AbonoTableAdapter != null) 
                            && (this._cargo_AbonoTableAdapter.Connection != null))) {
                    return this._cargo_AbonoTableAdapter.Connection;
                }
                if (((this._comunidadTableAdapter != null) 
                            && (this._comunidadTableAdapter.Connection != null))) {
                    return this._comunidadTableAdapter.Connection;
                }
                if (((this._contadorTableAdapter != null) 
                            && (this._contadorTableAdapter.Connection != null))) {
                    return this._contadorTableAdapter.Connection;
                }
                if (((this._contratoTableAdapter != null) 
                            && (this._contratoTableAdapter.Connection != null))) {
                    return this._contratoTableAdapter.Connection;
                }
                if (((this._hidroelectricaTableAdapter != null) 
                            && (this._hidroelectricaTableAdapter.Connection != null))) {
                    return this._hidroelectricaTableAdapter.Connection;
                }
                if (((this._lecturaTableAdapter != null) 
                            && (this._lecturaTableAdapter.Connection != null))) {
                    return this._lecturaTableAdapter.Connection;
                }
                if (((this._parametroTableAdapter != null) 
                            && (this._parametroTableAdapter.Connection != null))) {
                    return this._parametroTableAdapter.Connection;
                }
                if (((this._passwordTableAdapter != null) 
                            && (this._passwordTableAdapter.Connection != null))) {
                    return this._passwordTableAdapter.Connection;
                }
                if (((this._personaTableAdapter != null) 
                            && (this._personaTableAdapter.Connection != null))) {
                    return this._personaTableAdapter.Connection;
                }
                if (((this._tip_Cargo_AbonoTableAdapter != null) 
                            && (this._tip_Cargo_AbonoTableAdapter.Connection != null))) {
                    return this._tip_Cargo_AbonoTableAdapter.Connection;
                }
                if (((this._tip_ParametroTableAdapter != null) 
                            && (this._tip_ParametroTableAdapter.Connection != null))) {
                    return this._tip_ParametroTableAdapter.Connection;
                }
                if (((this._tIPO_SERVICIOTableAdapter != null) 
                            && (this._tIPO_SERVICIOTableAdapter.Connection != null))) {
                    return this._tIPO_SERVICIOTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._cargo_AbonoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._comunidadTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._contadorTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._contratoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._hidroelectricaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._lecturaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._parametroTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._passwordTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._personaTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tip_Cargo_AbonoTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tip_ParametroTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._tIPO_SERVICIOTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateUpdatedRows(MCHDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._hidroelectricaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Hidroelectrica.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._hidroelectricaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tIPO_SERVICIOTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.TIPO_SERVICIO.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tIPO_SERVICIOTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._comunidadTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Comunidad.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._comunidadTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._personaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Persona.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._personaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._contadorTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Contador.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._contadorTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._contratoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Contrato.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._contratoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tip_ParametroTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tip_Parametro.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tip_ParametroTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._tip_Cargo_AbonoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Tip_Cargo_Abono.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._tip_Cargo_AbonoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._lecturaTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Lectura.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._lecturaTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._cargo_AbonoTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Cargo_Abono.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._cargo_AbonoTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._passwordTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Password.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._passwordTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._parametroTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.Parametro.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._parametroTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateInsertedRows(MCHDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._hidroelectricaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Hidroelectrica.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._hidroelectricaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tIPO_SERVICIOTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.TIPO_SERVICIO.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tIPO_SERVICIOTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._comunidadTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Comunidad.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._comunidadTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._personaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Persona.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._personaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._contadorTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Contador.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._contadorTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._contratoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Contrato.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._contratoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tip_ParametroTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tip_Parametro.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tip_ParametroTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._tip_Cargo_AbonoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Tip_Cargo_Abono.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._tip_Cargo_AbonoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._lecturaTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Lectura.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._lecturaTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._cargo_AbonoTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Cargo_Abono.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._cargo_AbonoTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._passwordTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Password.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._passwordTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._parametroTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.Parametro.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._parametroTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private int UpdateDeletedRows(MCHDataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._parametroTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Parametro.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._parametroTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._passwordTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Password.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._passwordTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._cargo_AbonoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Cargo_Abono.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._cargo_AbonoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._lecturaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Lectura.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._lecturaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tip_Cargo_AbonoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tip_Cargo_Abono.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tip_Cargo_AbonoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tip_ParametroTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Tip_Parametro.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tip_ParametroTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._contratoTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Contrato.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._contratoTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._contadorTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Contador.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._contadorTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._personaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Persona.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._personaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._comunidadTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Comunidad.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._comunidadTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._tIPO_SERVICIOTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.TIPO_SERVICIO.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._tIPO_SERVICIOTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._hidroelectricaTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.Hidroelectrica.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._hidroelectricaTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public virtual int UpdateAll(MCHDataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._cargo_AbonoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._cargo_AbonoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._comunidadTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._comunidadTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._contadorTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._contadorTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._contratoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._contratoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._hidroelectricaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._hidroelectricaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._lecturaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._lecturaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._parametroTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._parametroTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._passwordTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._passwordTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._personaTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._personaTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tip_Cargo_AbonoTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tip_Cargo_AbonoTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tip_ParametroTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tip_ParametroTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            if (((this._tIPO_SERVICIOTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._tIPO_SERVICIOTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s" +
                        "tring.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._cargo_AbonoTableAdapter != null)) {
                    revertConnections.Add(this._cargo_AbonoTableAdapter, this._cargo_AbonoTableAdapter.Connection);
                    this._cargo_AbonoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._cargo_AbonoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._cargo_AbonoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._cargo_AbonoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._cargo_AbonoTableAdapter.Adapter);
                    }
                }
                if ((this._comunidadTableAdapter != null)) {
                    revertConnections.Add(this._comunidadTableAdapter, this._comunidadTableAdapter.Connection);
                    this._comunidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._comunidadTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._comunidadTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._comunidadTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._comunidadTableAdapter.Adapter);
                    }
                }
                if ((this._contadorTableAdapter != null)) {
                    revertConnections.Add(this._contadorTableAdapter, this._contadorTableAdapter.Connection);
                    this._contadorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._contadorTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._contadorTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._contadorTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._contadorTableAdapter.Adapter);
                    }
                }
                if ((this._contratoTableAdapter != null)) {
                    revertConnections.Add(this._contratoTableAdapter, this._contratoTableAdapter.Connection);
                    this._contratoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._contratoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._contratoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._contratoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._contratoTableAdapter.Adapter);
                    }
                }
                if ((this._hidroelectricaTableAdapter != null)) {
                    revertConnections.Add(this._hidroelectricaTableAdapter, this._hidroelectricaTableAdapter.Connection);
                    this._hidroelectricaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._hidroelectricaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._hidroelectricaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._hidroelectricaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._hidroelectricaTableAdapter.Adapter);
                    }
                }
                if ((this._lecturaTableAdapter != null)) {
                    revertConnections.Add(this._lecturaTableAdapter, this._lecturaTableAdapter.Connection);
                    this._lecturaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._lecturaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._lecturaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._lecturaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._lecturaTableAdapter.Adapter);
                    }
                }
                if ((this._parametroTableAdapter != null)) {
                    revertConnections.Add(this._parametroTableAdapter, this._parametroTableAdapter.Connection);
                    this._parametroTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._parametroTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._parametroTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._parametroTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._parametroTableAdapter.Adapter);
                    }
                }
                if ((this._passwordTableAdapter != null)) {
                    revertConnections.Add(this._passwordTableAdapter, this._passwordTableAdapter.Connection);
                    this._passwordTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._passwordTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._passwordTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._passwordTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._passwordTableAdapter.Adapter);
                    }
                }
                if ((this._personaTableAdapter != null)) {
                    revertConnections.Add(this._personaTableAdapter, this._personaTableAdapter.Connection);
                    this._personaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._personaTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._personaTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._personaTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._personaTableAdapter.Adapter);
                    }
                }
                if ((this._tip_Cargo_AbonoTableAdapter != null)) {
                    revertConnections.Add(this._tip_Cargo_AbonoTableAdapter, this._tip_Cargo_AbonoTableAdapter.Connection);
                    this._tip_Cargo_AbonoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tip_Cargo_AbonoTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tip_Cargo_AbonoTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tip_Cargo_AbonoTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tip_Cargo_AbonoTableAdapter.Adapter);
                    }
                }
                if ((this._tip_ParametroTableAdapter != null)) {
                    revertConnections.Add(this._tip_ParametroTableAdapter, this._tip_ParametroTableAdapter.Connection);
                    this._tip_ParametroTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tip_ParametroTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tip_ParametroTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tip_ParametroTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tip_ParametroTableAdapter.Adapter);
                    }
                }
                if ((this._tIPO_SERVICIOTableAdapter != null)) {
                    revertConnections.Add(this._tIPO_SERVICIOTableAdapter, this._tIPO_SERVICIOTableAdapter.Connection);
                    this._tIPO_SERVICIOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(workConnection));
                    this._tIPO_SERVICIOTableAdapter.Transaction = ((global::System.Data.SqlClient.SqlTransaction)(workTransaction));
                    if (this._tIPO_SERVICIOTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._tIPO_SERVICIOTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._tIPO_SERVICIOTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._cargo_AbonoTableAdapter != null)) {
                    this._cargo_AbonoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._cargo_AbonoTableAdapter]));
                    this._cargo_AbonoTableAdapter.Transaction = null;
                }
                if ((this._comunidadTableAdapter != null)) {
                    this._comunidadTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._comunidadTableAdapter]));
                    this._comunidadTableAdapter.Transaction = null;
                }
                if ((this._contadorTableAdapter != null)) {
                    this._contadorTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._contadorTableAdapter]));
                    this._contadorTableAdapter.Transaction = null;
                }
                if ((this._contratoTableAdapter != null)) {
                    this._contratoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._contratoTableAdapter]));
                    this._contratoTableAdapter.Transaction = null;
                }
                if ((this._hidroelectricaTableAdapter != null)) {
                    this._hidroelectricaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._hidroelectricaTableAdapter]));
                    this._hidroelectricaTableAdapter.Transaction = null;
                }
                if ((this._lecturaTableAdapter != null)) {
                    this._lecturaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._lecturaTableAdapter]));
                    this._lecturaTableAdapter.Transaction = null;
                }
                if ((this._parametroTableAdapter != null)) {
                    this._parametroTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._parametroTableAdapter]));
                    this._parametroTableAdapter.Transaction = null;
                }
                if ((this._passwordTableAdapter != null)) {
                    this._passwordTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._passwordTableAdapter]));
                    this._passwordTableAdapter.Transaction = null;
                }
                if ((this._personaTableAdapter != null)) {
                    this._personaTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._personaTableAdapter]));
                    this._personaTableAdapter.Transaction = null;
                }
                if ((this._tip_Cargo_AbonoTableAdapter != null)) {
                    this._tip_Cargo_AbonoTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tip_Cargo_AbonoTableAdapter]));
                    this._tip_Cargo_AbonoTableAdapter.Transaction = null;
                }
                if ((this._tip_ParametroTableAdapter != null)) {
                    this._tip_ParametroTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tip_ParametroTableAdapter]));
                    this._tip_ParametroTableAdapter.Transaction = null;
                }
                if ((this._tIPO_SERVICIOTableAdapter != null)) {
                    this._tIPO_SERVICIOTableAdapter.Connection = ((global::System.Data.SqlClient.SqlConnection)(revertConnections[this._tIPO_SERVICIOTableAdapter]));
                    this._tIPO_SERVICIOTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private bool IsChildAndParent(global::System.Data.DataRow child, global::System.Data.DataRow parent) {
                global::System.Diagnostics.Debug.Assert((child != null));
                global::System.Diagnostics.Debug.Assert((parent != null));
                global::System.Data.DataRow newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((newParent != null) 
                            && ((object.ReferenceEquals(newParent, child) == false) 
                            && (object.ReferenceEquals(newParent, parent) == false))); 
                ) {
                    newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }
                if ((newParent == null)) {
                    for (newParent = child.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original); ((newParent != null) 
                                && ((object.ReferenceEquals(newParent, child) == false) 
                                && (object.ReferenceEquals(newParent, parent) == false))); 
                    ) {
                        newParent = newParent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }
                if (object.ReferenceEquals(newParent, parent)) {
                    return true;
                }
                return false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                // Is row1 the child or grandchild of row2
                if (this.IsChildAndParent(row1, row2)) {
                    return this._childFirst;
                }

                // Is row2 the child or grandchild of row1
                if (this.IsChildAndParent(row2, row1)) {
                    return (-1 * this._childFirst);
                }
                return 0;
            }
        }
    }
}

#pragma warning restore 1591